<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section epub:type="chapter" role="doc-chapter" aria-labelledby="c08_1">&#13;
<header>&#13;
<h1 id="c08_1"><span epub:type="pagebreak" id="Page_435" role="doc-pagebreak" aria-label="435"/><span id="c08"/><span class="chapterNumber">Chapter 8</span><br/><span class="chapterTitle">Hardware and Systems Security</span></h1>&#13;
</header>&#13;
<section aria-label="chapter opening"><span id="c08-sec-0001"/>&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3">&#13;
<h3>THE SSCP EXAM OBJECTIVES COVERED IN THIS CHAPTER INCLUDE:</h3>&#13;
<ul class="none" id="c08-list-0001">&#13;
<li id="c08-li-0001"><b>Domain 7: Systems and Application Security</b>&#13;
<ul class="tick" id="c08-list-1001">&#13;
<li id="c08-li-0002"><b>7.1: Identify and analyze malicious code and activity</b></li>&#13;
<li id="c08-li-0003"><b>7.2: Implement and operate endpoint device security</b></li>&#13;
<li id="c08-li-0004"><b>7.3: Administer Mobile Device Management (MDM)</b></li>&#13;
<li id="c08-li-0005"><b>7.5: Operate and maintain secure virtual environments</b></li>&#13;
</ul></li>&#13;
</ul>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside>&#13;
<p id="c08-para-0003"><span epub:type="pagebreak" id="Page_436" role="doc-pagebreak" aria-label="436"/>Underneath all of our administrative and logical controls, we find the physical. Without the underlying hardware and without the mix of firmware and operating systems software that makes that hardware actually do something, our applications and data and our business logic and our risk management plans would have nowhere to run and no ability to make work happen. But how do we build trust and confidence that this foundation layer of our trust pyramid is still trustworthy? From the individual chip level up to huge datacenters, hardware and systems vendors build in the features that SSCPs need to utilize to keep the business logic and the business data safe, secure, and resilient. Operating systems developers then layer on both the device-specific OS and the network operating system (NOS).</p>&#13;
<p id="c08-para-0004">But there are other physical aspects of information systems security that SSCPs need to understand and include in their plans and activities. The first of these are the places in which work takes place—even the most virtual of organizations has real people who sit or stand <i>somewhere</i> while they are using the IT systems to get work done. Next we must include the operational technology (OT) elements, those control and supervisory systems that sense or change the physical world. As more of manufacturing, shipping, and service delivery move to the edge of the cloud, this IT-mediated direct engagement with the real world must be kept safe, secure, and trustworthy.</p>&#13;
<p id="c08-para-0005">From a systems perspective, we have to recognize that where the system meets the external world—where it encounters the hands and senses of its users, or transforms data into physical action—is really where the purposes of the system become reality. These <i>endpoints</i> have long been a major concern for security professionals; it's important to keep focused on the two-sided problem of protecting the endpoints from compromise by intruding threat agents within the system, as well as protecting the system from endpoints that do not belong to the system, or ones that do but have “gone rogue” and are being used to attack the system.</p>&#13;
<p id="c08-para-0006">In this chapter, you will learn how to ensure that the logistics elements of your information risk management plans deliver a trustworthy base of computing, communications, and information storage power. We are taking the <i>infrastructure</i> view of our systems security practice. The economics of the cloud have changed our thinking about when or whether to own our own servers or rent them by the millisecond. Regardless, there are a lot of devices between the servers (whoever owns them) and our users, so device security is still a paramount concern and probably always will be. As a result, this chapter will deal with operating and securing the systems your organization “owns” rather than rents time on; <a href="c09.xhtml">Chapter 9</a>, “Applications, Data, and Cloud Security,” will extend that thinking into the cloud. We'll also focus here on systems, while leaving <a href="c09.xhtml">Chapter 9</a> to look at applications (homegrown or vendor-supplied platforms) and data security.</p>&#13;
</section>&#13;
<section aria-labelledby="head-2-139"><span id="c08-sec-0002"/>&#13;
<h2 id="head-2-139">Infrastructure Security Is Baseline Management</h2>&#13;
<p id="c08-para-0007"><span epub:type="pagebreak" id="Page_437" role="doc-pagebreak" aria-label="437"/>We take the viewpoint in this chapter that to keep your organization's information systems secure, as infrastructures and as they are in use, you have to manage them as a baseline. You have to <i>control</i> that baseline, and know how to be able to validate or confirm that what's in the real, live, deployed, and in-use baseline <i>right now</i> is what's supposed to be there, no more and no less. This infrastructure-as-managed-baseline view starts with the lowest level of physical devices you use; layer by layer, you increase your span of what you <i>should</i> control as you add on capabilities, connections, and utility.</p>&#13;
<p id="c08-para-0008">Recall our definition of an infrastructure as a set of systems that work together to provide a common set of capabilities to a wide variety of users. Your organization's accounting department, for example, needs the same set of communications, data storage and retrieval, and computing capabilities (the same common infrastructure) as the product design group uses. On top of that infrastructure, the accountants add their “Big Four” software to handle accounts payable, accounts receivable, payroll, and finance, while product development groups add in CAD/CAM packages, simulation systems, or bill of material planning tools. Users then go many steps further as they embed business logic into data, metadata, macros, formulas, and programs that they write, which at some point become so widely used that they're almost a part of the infrastructure. Then there are user-provided or user-owned hardware, software, systems, and data, which all seem to <i>need</i> to become part of your systems. Add to this the ever-growing wilderness of the Internet of Things (IoT), and it's no wonder you're facing baseline management concerns!</p>&#13;
<p id="c08-para-0009">Management and leadership must set boundaries and priorities, and establish and direct them via policies and other administrative measures. As an SSCP, you may be asked to advise them on these; you most likely will have to help implement them, enforce them, and report on compliance issues.</p>&#13;
<section><span id="c08-sec-0003"/>&#13;
<h3 id="head-3-191">It's About Access Control…</h3>&#13;
<p id="c08-para-0010">…which of course means it's also about identity authentication and management. It's important to realize that as the SSCP on watch, so to speak, identity and access mean more than just software implementations in Active Directory, LDAP, or identity as a service (IDaaS) cloud-hosted IT-centric solutions! We'll discuss the details of people control in <a href="c11.xhtml">Chapter 11</a>, “Business Continuity via Information Security and People Power,” and we've discussed the software mechanics of identity management and access control in <a href="c06.xhtml">Chapter 6</a>, “Identity and Access Control.” But it's vitally important to realize that without controlling how people can get physical access to the actual hardware, cabling, spare parts and supplies, and the power and communications gear that make your IT infrastructure function, you're taking an incredible gamble. This access control need for safety and <span epub:type="pagebreak" id="Page_438" role="doc-pagebreak" aria-label="438"/>security should extend to everyone—staff, owners, senior stakeholders, and board of directors members, as well as clients, potential customers, and friends and family members of employees coming for a personal visit.</p>&#13;
<p id="c08-para-0011">This access control has to extend not only to all human entities, but to the nonhuman as well. Drones, mobile autonomous devices, robotic systems, and the mobile devices that people, packages, or these other mobile entities might bring in with them may each represent a threat vector. Access control at the administrative and logical level has to translate into effective physical measures that prevent the (human or robot) custodial worker from conducting a Wi-Fi mapping survey of your office spaces without your knowledge nor consent. Even a mobile phone “accidentally” left behind by someone can be surreptitiously eavesdropping on your people, your systems, and their work for your organization.</p>&#13;
<p>Many larger organizations have recognized that, much like the military and intelligence communities, they have their “no lone zones,” areas physical and logical into which no employee should be authorized to enter without someone else being with them—being aware of their entry and exit from the zone, monitoring their actions, or having a nonrepudiable audit trail of those actions. This “no lone zone” perspective protects the organization <i>and</i> the individual worker; it should start with the root of the hierarchies of trust your business depends on by starting at the physical reality of your offices and work spaces and the IT hardware you put into those spaces <i>or</i> allow to be brought into them.</p>&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3">&#13;
<h3><img alt="Warning" src="Images/warning.png" class="left" width="91" height="53"/> Safety First!</h3>&#13;
<p id="c08-para-0013">Human safety always comes first. Law, custom, and natural expectation dictate this. Regrettably, we see any number of industries and even societies where this just doesn't seem to be the case.</p>&#13;
<p id="c08-para-0014">We have to remember that in Western industrialized societies, putting worker and people safety first is a twentieth century innovation. It may have come about due to humanitarian thinking or because enlightened management realized that injured workers cost more and produce less. But there are still places around the globe that hold life cheap.</p>&#13;
<p id="c08-para-0015"><i>Safety first</i> is not just about achieving a safety culture internally within the organization. The safety of the people our organizations do business with—our customers, suppliers, and partners—must also be of paramount importance to us in our systems security plans and programs. This also includes the safety of our neighbors, and the others in the marketplaces and communities our organizations have a presence in or effect upon.</p>&#13;
<p id="c08-para-0016">As SSCPs, we have to practice to the highest standards, and safety of life comes first for us. That drives how we design and operate our information systems, how we keep them safe, and how we prioritize our decisions when responding to an incident.</p>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside>&#13;
</section>&#13;
<section><span id="c08-sec-0004"/>&#13;
<h3 id="head-3-192">It's Also About Supply Chain Security</h3>&#13;
<p id="c08-para-0017"><span epub:type="pagebreak" id="Page_439" role="doc-pagebreak" aria-label="439"/>Every element of your organization's IT systems runs on or with hardware, firmware, software, and data made by someone else, modified by someone else, and maintained or supported by someone else. Its parts and subsystems elements, layer by layer, come into being through long and complex value chains of organizations that buy and sell parts and subsystems from each other; they buy rights to chip-level or board-level design information. These supply chains wrap around the entire world—the most commonly licensed patents for cell phone technology originate in Finland and end up in chips designed in dozens of countries that are manufactured in a dozen more, before they end up in your company's products, systems, or end-user devices, or the IoT elements of your systems.</p>&#13;
<p id="c08-para-0018">Your organization, like all organizations, sits at the join of two sets of supply chains: one set coming into the organization to support its activities, and others flowing outward to other organizations that depend upon yours for their support and success.</p>&#13;
<p id="c08-para-0019">Many larger organizations form strategic partnerships with their top-tier suppliers and services providers to form a trusted supply chain. The trusted supply chain is an ancient concept—it may have originated in early agrarian societies that first used futures contracts to ensure sufficient grain production to meet bakers' needs. Each trusted supply chain has a set of values it seeks to protect, whether that is socially acceptable practices, environmentally friendly production, sustainability, or quality, safety, and reliability. Companies large and small need to rely on supply chains they can trust; trust needs to support your organization's risk management strategy and plan, and harmonize with rather than further threaten the findings of your vulnerability assessments. Ultimately, trusting your supply chain means a healthy dose of knowing the people and the players in it; being transparent about production, sources of supply, and design and production techniques; sharing insights from verification and validation testing; and letting your suppliers know and trust <i>you</i> as a customer.</p>&#13;
<p id="c08-para-0020">It may seem at first glance that as an SSCP, you'd have a very small role at the edge of the “trusted supply chain problem set,” if we could group all of these issues under one label. As we look deeper into what it takes to keep just the IT hardware, its firmware, operating systems, and the network systems they use safe, secure, and reliable, keep thinking about the supply chains <i>you</i> and the IT team need to rely on. As you see those supply chains in action—or as and if they fail to act in reliable ways—you may be called on or need to step up to make them more secure and more trustworthy.</p>&#13;
</section>&#13;
<section><span id="c08-sec-0005"/>&#13;
<h3 id="head-3-193">Do Clouds Have Boundaries?</h3>&#13;
<p>Cloud services can be part of your organization's IT systems as private, public, or hybrid environments:</p>&#13;
<ul class="square" id="c08-list-0002">&#13;
<li id="c08-li-0006"><i>Private clouds</i> are those cloud systems that one organization has sole and dedicated use of. In one type of private cloud deployment, the organization owns (or rents) the host hardware, licenses the systems and hypervisor software for, and is responsible for all maintenance and provisioning of that cloud. Configuration management, <span epub:type="pagebreak" id="Page_440" role="doc-pagebreak" aria-label="440"/>from hardware on up, is the organization's responsibility. When renting service bureau or datacenter capabilities, this can sometimes be called a <i>bare iron</i> cloud, since the supplier doesn't do much more than provide equipment, power, air conditioning, and physical premises security. Any requirement for geographically dispersed backup capabilities, load sharing, and so forth is the responsibility of the organization. The other type of private cloud deployment uses cloud services providers (such as Microsoft and Amazon) to provide fully secure, private services to the customer organization, guaranteeing the total privacy and integrity of these services via contract and service level agreements. The cloud services provider operates and maintains all equipment and facilities; software configuration management and licensing then are based on what sort of service model the client organization chooses to use.</li>&#13;
<li id="c08-li-0007"><i>GovCloud</i> is becoming the next major initiative in cloud-hosting arrangements. It provides cloud services tailored to meet the needs of the U.S. federal government, whether for a single agency or for an interagency federation of activities. Major cloud-hosting providers, such as Amazon and Microsoft, structure their GovCloud offerings in various ways to meet the needs of government, their contractors, and others that they work with to collaborate on sensitive information and processing needs. GovCloud provides ways for such participants to ensure that their work meets the U.S. International Traffic in Arms Regulations (ITAR) requirements when developing systems for sale or deployment internationally.</li>&#13;
<li id="c08-li-0008"><i>Public clouds</i> are cloud systems in which multiple, unrelated customers are hosted on the cloud provider's systems, sharing that set of hardware, systems, and software resources; the cloud services provider is responsible for the hardware, hypervisor, communications, and systems software, along with power, air conditioning, security, and maintenance. These customers may be competitors, partners in other business ventures, or totally unrelated to each other. Typically, service level agreements (SLAs) will define privacy requirements that keep the identity, usage patterns, and contract terms of one customer private from other customers. Public clouds may be hosted by very large companies (such as Microsoft Azure, Amazon Web Services, and Google Cloud Platform) or hundreds of much smaller cloud providers. The larger systems provide very large datacenters around the world, with varying capabilities for dynamic synchronization, load balancing, and backup of data across these centers.</li>&#13;
<li id="c08-li-0009"><i>Community clouds</i> are cloud systems created to support the needs of a group of organizations and individuals that have a sense of common or shared purpose, intent, and objective; they are a <i>community of practice</i> in that regard. The shared interests can reflect any mix of social, business, governance, artistic, educational, or other interests and needs. For example, community clouds are often created to host, support, and manage the security testing of new IT systems or products, bringing the resources and talent of various businesses and security research organizations together in a limited, focused manner. The community may establish a formal governance model and process for their shared resources, or work on more of an ad hoc basis. Community clouds often blend the different cloud models together to best support the group's needs.</li>&#13;
<li id="c08-li-0010"><span epub:type="pagebreak" id="Page_441" role="doc-pagebreak" aria-label="441"/><i>Hybrid clouds</i> are cloud systems that have (as you'd expect) a mix of both public and private characteristics. A particular organization may have a need to host some business processes on a local, private cloud system that is fully under its control, while using public cloud services for other business processes.</li>&#13;
</ul>&#13;
<p>It's useful to treat the mix of deployment models and services an organization is using as an infrastructure in its own right, particularly from a security architecture and engineering perspective. Two additional aspects of a cloud system's architecture to consider are edge and fog computing models:</p>&#13;
<ul class="square" id="c08-list-0003">&#13;
<li id="c08-li-0011"><i>Fog computing</i> distributes computation and data analysis loads to multiple servers, often taking the servers close to or at the individual business locations of the organization. These compute servers tend to have local storage for transient data, but work with centralized storage systems for overall data collection, management, and use by the organization. This helps balance network traffic, latency, and reliability, which can be important in process control, content distribution, and other applications.</li>&#13;
<li id="c08-li-0012"><i>Edge computing</i> extends the fog concept further out by putting the data acquisition, computation, and storage as close to the actual data source (or sink) as possible. Generally, the edge device (server, workstation, or endpoint) does not require services or support from the fog or cloud to perform its functions; it sends data to the fog and cloud for upstream processing and distribution.</li>&#13;
<li id="c08-li-0013">IoT devices, especially in industrial process control environments, are examples of edge systems; the local or regional control systems that manage a factory or warehouse, or a city's traffic control systems, are good examples of fog computing systems.&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3">&#13;
<h3><img alt="Note" src="Images/note.png" class="left" width="76" height="53"/> IT, OT, and IoT: The Cybersecurity Challenge</h3>&#13;
<p id="c08-para-0026">Perhaps the most challenging security issues are involved with the world of operational technology systems—a label which embraces robotics, process control, smart home and personal digital assistance technologies, and many more. To learn more, see Yaacoub, Noura, Salman, and Chehab, 2021: Robotics cyber security: vulnerabilities, attacks, countermeasures, and recommendations. International Journal of Information Security, <code><a href="https://doi.org/10.1007/s10207-021-00545-8">https://doi.org/10.1007/s10207-021-00545-8</a></code></p>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside></li>&#13;
</ul>&#13;
<p id="c08-para-0027">From a security management perspective, think of this in <i>contractual</i> terms: if your organization signs a contract with a service bureau or cloud systems provider for any kinds of “as-a-service” arrangements, (also known as <i>third party</i> or <i>shared responsibility</i> models) then that contract (or SLA) documents where your IT team's responsibilities for security end and the cloud systems provider's take over. In many respects, a private cloud is not that much different than a private datacenter that operates without a hypervisor and virtual machine capabilities; in both cases, your organization “owns” its success or failure, whether it purchased the equipment outright or is leasing it.</p>&#13;
<p id="c08-para-0028">Before we can look at those IT/OT hardware, software, and communications infrastructures, we first need to put them into a physical context.</p>&#13;
</section>&#13;
</section>&#13;
<section aria-labelledby="head-2-140"><span id="c08-sec-0006"/>&#13;
<h2 id="head-2-140">Securing the Physical Context</h2>&#13;
<p id="c08-para-0029"><span epub:type="pagebreak" id="Page_442" role="doc-pagebreak" aria-label="442"/>So long as work is being done by people and those people are using technologies to assist them in their work, that work will need some physical place in which the people and technologies are together. What the technologies are and how the work gets done are secondary concerns; the first security concern is protecting the <i>value</i> being produced by that work, by assuring sufficient physical, environmental, and supply chain safety and security for that work location and the activities that take place in it. This may seem like a blinding flash of the obvious, but it's surprising to see how often these “creature comfort” aspects of workplace security and safety are forgotten by many IT-intensive businesses and other organizations.</p>&#13;
<p id="c08-para-0030">Effective physical security requires a holistic approach, one that goes beyond securing the on-premise datacenter or data archival storage areas; it goes beyond protecting the endpoint devices from being tampered with, stolen, or “augmented” by the addition of unauthorized and possibly harmful hardware, software, data, or infrastructure elements to them. This is true whether the workspace is an area of the worker's residence or the factories, warehouses, offices, and product engineering labs of a major multinational business.</p>&#13;
<p id="c08-para-0031">Each of the major elements of physical systems and services can be a rich source of threat detection information as well as a powerful set of security controls; yet many organizations fail to integrate these into their overall security plan. Let's take a closer look at these.</p>&#13;
<section><span id="c08-sec-0007"/>&#13;
<h3 id="head-3-194">Facilities Security</h3>&#13;
<p id="c08-para-0032">The concrete and steel, the brick and mortar, the doors and windows—all these and many other elements make up the physical fabric of the workspaces. Their design and construction can serve many purposes in the ways in which they partition an interior space from the exterior, outside world; they further partition the interior into many different work areas (some more suited to the needs of its occupant-users than others, of course). The physical nature of the building can channel, guide, or control the flow of people, machines, and materials into, within, or out of the workspace.</p>&#13;
<p id="c08-para-0033">They also provide a physical fabric in and on which various infrastructure elements such as ventilation, lighting, power, and communications can be installed and made useful. For manufacturing, transportation, materials processing, and many other purposes, the physical fabric of the workspaces is often dictated by the physical nature of the processes being performed. Intermodal freight terminals, chemical processing plants, and electric power generation stations demonstrate this concept throughout their form, construction, and use. First, the purpose; then, the form.</p>&#13;
<p id="c08-para-0034">Security professionals can borrow some of the lessons from civil engineering, architecture, and building design that are summed up in the concept of <i>crime prevention through environmental design</i> (CPTED). CPTED tries to bring awareness of the security and safety purposes (or requirements) into the process of selecting a location, developing its large-scale arrangement or design, and then iteratively refining that design down to whatever level is necessary. CPTED shows how to use the physical construction of the work location to fulfill or support <span epub:type="pagebreak" id="Page_443" role="doc-pagebreak" aria-label="443"/>security controls in design and use: direction, deterrent, prevention, detection, response, recovery, and compensatory controls are all possible to perform or augment via physical construction.</p>&#13;
<p>A multilayer integrated identity and access control and management system demonstrates these concepts:</p>&#13;
<ul class="square" id="c08-list-0004">&#13;
<li id="c08-li-0014">Identity lifecycle management controls how entities of any type—permanent members of the organization, temporary visitors, guests, or other roles—can have identities created, authorized for certain privileges, and then enabled to access the facility.</li>&#13;
<li id="c08-li-0015">Physical barriers and devices such as fences, landscaping design, buildings, doors, windows, interior walls and doors, and so forth, provide the physical boundaries between security domains. Checkpoints at legitimate, designed-in crossing points provide trusted paths across these perimeters.</li>&#13;
<li id="c08-li-0016">Physical controls such as badge readers, biometric sensors, keypads, or attendants at a visitor or entrance control point can be used at any point where an entity seeks to cross from one security domain to another. They rely on the IAM system for authentication and authorization; their actions collect data from the requesting entity, generate more data regarding the action being authorized, and pass that data on to the IAM as accounting database updates.</li>&#13;
<li id="c08-li-0017">Physical sensor systems monitor the condition of the facilities. Its physical fabric (the walls, doors, or windows) may have integrity-checking sensors that can detect attempts to modify that fabric, perhaps as part of an intrusion attempt. Smoke, temperature, airflow, and other sensors can detect environmental changes that might signal a fire, water flood (due to weather or plumbing system failures), or other problem in need of attention (which might be part of a devious attacker's attempts to create a diversion).</li>&#13;
</ul>&#13;
</section>&#13;
<section><span id="c08-sec-0008"/>&#13;
<h3 id="head-3-195">Services Security</h3>&#13;
<p id="c08-para-0036">In almost all cases, work locations need some form of energy supply, which is used to provide electric power for IT, OT, and communications systems. It also powers the internal environmental control systems, often referred to collectively as the HVAC (for heating, ventilation, and air conditioning) systems; these may also make use of externally provided oil, gas, or solid fuels. Electric power also is used for powered door locks and barrier systems (such as mantraps), elevators, lighting, and other systems and elements that address (some of) the needs and wants of the people working in or visiting the facility. Water supplies, sewage systems, and refuse collection round out the set of external services dependencies. Each of these services generally has a controlled, designated place where they enter the facility, sometimes known as the <i>point of presence</i> (POP) or <i>service access</i>.</p>&#13;
<p id="c08-para-0037">Service interruptions can, of course, impact the safety and security of work being performed in the facility, whether those service interruptions are deliberate attacks or the result of acts of nature or accidents. Security systems design needs to consider which of these services require what form of risk mitigation, which then dictates the use of control strategies and techniques to detect, characterize, protect, and respond to such interruptions.</p>&#13;
</section>&#13;
<section><span id="c08-sec-0009"/>&#13;
<h3 id="head-3-196">OT-Intensive (or Reliant) Contexts</h3>&#13;
<p id="c08-para-0038"><span epub:type="pagebreak" id="Page_444" role="doc-pagebreak" aria-label="444"/>Many of the digital devices and systems used in industrial control, process control, and systems automation for physical infrastructures were designed to use simpler, more ruggedized processors and controllers than are typically found in consumer-grade IT devices. They might be installed on the factory floor, in vehicles, or built into special-purpose devices used in harsh, outdoor environments. Their users and designers did not normally anticipate the need for security controls, other than perhaps a mechanical lock on the device's enclosure. Firmware updates are often difficult to perform remotely. Until recently, many of these devices used their own proprietary protocols and interfaces, enabling them to be built up into larger-scale systems. Most OT systems were then interfaced to organizational or corporate IT systems for remote monitoring and supervision, data collection, and analysis purposes. These interfaces would use gateway devices to interface IP networks to the specific interfaces and protocols used by the different control technologies being used.</p>&#13;
<p id="c08-para-0039">Organizations that are using significant numbers and varieties of IoT devices, from autonomous and mobile systems through the simplest of personal area network components, are finding that IoT and the worlds of OT share these common security concerns. From the physical perspective, this means that many of these devices can be tampered with (or stolen), often with the interruption or cessation of the service they are providing as the only signal back to any centralized monitoring and control. Some devices have no straightforward way to change their built-in device identification and access control features (if they have any such controls at all).</p>&#13;
<p id="c08-para-0040">Finally, it's essential to recognize that many of the critical services provided to the physical work locations make use of various operational technologies to manage their own condition and actions. HVAC systems will use their own SCADA systems to balance energy use with demand settings for air temperature, humidity, and other user needs; and as Target, Inc., discovered to its cost in 2013, those SCADA interfaces on an HVAC system represent a threat surface that an intruder can possibly exploit.</p>&#13;
</section>&#13;
</section>&#13;
<section aria-labelledby="head-2-141"><span id="c08-sec-0010"/>&#13;
<h2 id="head-2-141">Infrastructures 101 and Threat Modeling</h2>&#13;
<p id="c08-para-0041">Compare and contrast a typical small office/home office (SOHO) local area network (LAN), which might support a dozen users via a network attached storage, a router, and a Wi-Fi access point, to a typical datacenter design. The datacenter needs to provide redundant Internet connections; multiple connection paths from endpoints within the company premises; mobile device access management; remote access management; multiple compute servers capable of meeting the data processing needs of the organization; and much larger storage capacity, including backup capabilities. Adaptive, load-balancing switches are necessary to bring those capabilities together internally in a mesh architecture that can provide a degree of hot-swap repair and replacement as processor boards, RAM, or disk drives fail. <a href="#c08-fig-0001" id="R_c08-fig-0001">Figure 8.1</a> shows a typical datacenter design, illustrating these concepts; datacenters along these lines started to appear in the 1990s and are still in use today.</p>&#13;
<p id="c08-para-0042"><span epub:type="pagebreak" id="Page_445" role="doc-pagebreak" aria-label="445"/>What this notional diagram does not show are the additional infrastructure elements that provide endpoint access to the datacenter. This would probably involve another set of (redundant) domain controller servers, communications or network management servers, and adaptive, load-balancing switching, to bring authorized local and remote user login and access capability into the mesh of the core and aggregation layer routers.</p>&#13;
<figure> <img alt="Schematic illustration of Notional datacenter design" src="Images/c08f001.png" class="center" width="1527" height="960"/>&#13;
<figcaption>&#13;
<p><span class="figureLabel"><a href="#R_c08-fig-0001" id="c08-fig-0001" role="doc-backlink">FIGURE 8.1</a></span> Notional datacenter design</p>&#13;
</figcaption>&#13;
</figure>&#13;
<p>What's inside each of those blocks on that diagram (and the blocks on the diagrams not shown) are more layers of our IT infrastructure. At the lowest level is board-level computing hardware, along with its internal memory for firmware and software; these form the “bare metal” of most servers, processors, and even routers, switches, and gateways. Next, add on the input/output controllers, storage servers, and their associated disk drives. Electrical power and air conditioning come next, and of course, the interconnect cabling or fiber that knits it all together. On top of all that hardware, we need to cope with layers of programming, from closest to the hardware to closest to the user. This becomes clear if we look at the sequence of control as the hardware first starts its power-up sequence:</p>&#13;
<ol class="decimal" id="c08-list-0005">&#13;
<li id="c08-li-0018">Hard-wired logic starts the reset / restart sequence, and quickly turns control over to very low-level firmware in read-only memory at the chip level.</li>&#13;
<li id="c08-li-0019">Firmware in read-only memory chips or boards then starts to prepare for device-level initialization and control.</li>&#13;
<li id="c08-li-0020">More firmware comes next, which can be what initializes the system at cold boot or warm reset. In PC architectures, these functions were originally performed by the basic input-output subroutines (BIOS), which has largely been replaced by the Unified Extensible Firmware Interface [UEFI] bootstrap system.</li>&#13;
<li id="c08-li-0021"><span epub:type="pagebreak" id="Page_446" role="doc-pagebreak" aria-label="446"/>Then, control is turned over to the bootstrap loader software, either on hard disk, over the network, or other network attached storage.</li>&#13;
<li id="c08-li-0022">The bootstrap loader software loads, and turns control over to, the operating system loader and start-up routines.</li>&#13;
<li id="c08-li-0023">Finally the OS system loader and start-up routines control the loading and initialization of the rest of the operating system, including user access controls, network logon and initialization, and other startup-time software.</li>&#13;
</ol>&#13;
<p id="c08-para-0044">At each step along the way, any number of configuration and control parameters are also read out of storage (firmware read-only memory, or files in the file system). These values are as critical to proper initialization and startup of the device as the instructions in the firmware or software. Many of these parameters can be edited by means of setup utilities, which users can access during the hardware boot process, once the operating system has finished loading, or both.</p>&#13;
<p>Whether the device in question is a router, a switch, a server, or an endpoint workstation, we see this same hierarchy of code. From the SSCP's perspective, the message should be clear: <i>everywhere you look, the hardware has embedded firmware, software, or other control parameters that must be protected from corruption or attack</i>. With that in mind, let's look closer at a few vulnerabilities along the way, from the lowest-level chip up to the datacenter and beyond.</p>&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3">&#13;
<h3><img alt="Warning" src="Images/warning.png" class="left" width="91" height="53"/> The Zero Day Exploit</h3>&#13;
<p id="c08-para-0047">It's clear that many people worldwide are actively seeking new vulnerabilities within the hardware and software systems we use every day. When ethical hackers discover a new vulnerability, they work with the system manufacturer or vendor to confirm that the vulnerability is real. The vendor can then work on a containment or prevention patch, while trying to resolve the underlying design or manufacturing flaw that led to the vulnerability.</p>&#13;
<p id="c08-para-0048">To the malicious hackers, discovering a new, heretofore undocumented vulnerability or a new exploit against an existing, documented vulnerability represents a win in the race against time. There is a window of opportunity here for the black hat: until someone else discovers the same vulnerability and reports it to the manufacturer, the vendor, or the cybersecurity community at large, this new vulnerability may be open to undetected exploitation. This window of opportunity can exist for hours, days, or even months. Exploits done during that window are considered <i>zero day exploits</i>, not because they are exploited immediately (within 24 hours) of being found, but because the exploit happens before legitimate users, the manufacturer, or the cybersecurity community as a whole knows of the existence of the vulnerability.</p>&#13;
<p id="c08-para-0049"><span epub:type="pagebreak" id="Page_447" role="doc-pagebreak" aria-label="447"/>The Stuxnet attack on the Iranian nuclear fuels processing systems is a case in point. Allegedly, Western intelligence and cyberwarfare experts discovered that previously unknown vulnerabilities existed in these fuels processing systems. These vulnerabilities could be exploited to command high-speed centrifuges to operate in ways that damaged or destroyed them, while simultaneously lying to systems operators by reporting falsified operating conditions. It apparently took months to infiltrate Stuxnet into these facilities, yet Stuxnet is considered a zero day exploit.</p>&#13;
<p id="c08-para-0050">The key question to ask? How would you detect that somebody was running a zero day exploit against the systems you are defending?</p>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside>&#13;
<section><span id="c08-sec-0011"/>&#13;
<h3 id="head-3-197">Protecting the Trusted Computing Base</h3>&#13;
<p id="c08-para-0051">The <i>trusted computing base</i> (TCB) is the minimal, core set of hardware and operating systems functions and features that provide a highly reliable, secure, and protected foundation for everything else. This is the part of the system that keeps <i>user mode</i> programs from successfully attaining a privileged user status which would grant them the power to directly manipulate hardware devices. The TCB is the lowest level enforcer of access control policies, which it does by establishing and preserving the separation of memory and CPU resources in use by one process thread from being read, modified, or called into execution by another process. The TCB creates and controls the use of trusted paths that can exist between user-mode processes and each other, or with hardware devices (by means of their device drivers and service handlers).</p>&#13;
<p id="c08-para-0052">The TCB typically consists of the trusted platform module (TPM), the <i>reference monitor</i>, and elements of the operating system's <i>kernel</i>. The reference monitor is the part of the TCB that enforces the security rules; if it detects a violation, such as an attempt by one user mode program to access resources (such as RAM or CPU registers) allocated to another, it can (and will) shut down the system rather than allow a potential security violation to escalate. The operating system kernel contains the fundamental, core elements of the OS. These typically involve the functions that support creating and managing process IDs, managing main memory use by processes, managing virtual memory and paging, and managing the CPU and other essential hardware subsystems.</p>&#13;
<p id="c08-para-0053">At its heart, protecting your TCB requires a strong, secure IT and OT supply chain, which you then bring and keep under configuration management. Updates to TCB elements should be taken extremely seriously, and should <i>never</i> be allowed to happen without proper security, systems, and operational review and approval. Even a seemingly straightforward change to a different make and model of laptop or phablet computer, for use across the organization, will bring a new TCB into your security baseline.</p>&#13;
</section>&#13;
<section><span id="c08-sec-0012"/>&#13;
<h3 id="head-3-198">Hardware Vulnerabilities</h3>&#13;
<p id="c08-para-0054">This is a good time to remember that physical asset protection needs to consider theft, inadvertent or deliberate damage to, or tampering with equipment and systems as significant risks; risks that could lead to disruption to our business information systems. <span epub:type="pagebreak" id="Page_448" role="doc-pagebreak" aria-label="448"/>In <a href="c04.xhtml">Chapter 4</a>, “Operationalizing Risk Mitigation,” you considered these risks as part of the installed baseline of systems when doing the vulnerabilities assessment. This physical asset protection needs to extend across the lifecycle of that hardware, from identifying suppliers and vendors, purchasing, shipping it to your locations and receiving it; through installation and use; spare parts and maintenance activities; and finally, after it is decommissioned and disposed of. At each step in that physical asset lifecycle, those threats of accidental or deliberate damage or other loss are part of the risks you need to address.</p>&#13;
<p id="c08-para-0055">Electrical power and other operating environment characteristics can also represent possible threat vectors to the hardware installed within your locations. Depending on your particular installation and its needs, there may also be safety needs to address, such as how power and data cabling are protected from becoming trip hazards to personnel, or kept from being exposed to pinch, crush, or other damage by others in the workplace.</p>&#13;
<section><span id="c08-sec-0013"/>&#13;
<h4 id="head-4-86">Protecting the Hardware</h4>&#13;
<p id="c08-para-0056">Physical access control is important. This can be as simple as antitheft cable locks for PCs, laptops, or other small and highly portable devices, or installing equipment (such as modems, routers, and servers in a SOHO environment) in locking cabinets. The point of presence (where your Internet service provider's physical cable or fiber enters your workplace) also needs to be physically protected; even in most SOHO facilities, most employees do not need routine, unrestricted physical access to the modem, router, signal, and power cabling.</p>&#13;
<p id="c08-para-0057">Although it's perhaps obvious that an organization with its own on-premises datacenter needs to have that datacenter physically secured—restricting access to authorized IT department personnel, for example—even in smaller SOHO environments, physical security must be a consideration. Guests, visitors, or employees can easily reset unsecured equipment, which at a minimum causes a temporary disruption in service. It can also provide the opportunity for someone to reprogram the device (once it's been reset to its factory default settings, including its administrative login information).</p>&#13;
<p id="c08-para-0058">Your organization may need to prevent or tightly control the use of removable media, such as USB, Firewire, or other devices. This may require blank panels that cover the USB ports on laptops or servers, for example. Don't forget the USB ports on the routers or modems—many network devices provide these as part of their feature set, and if your organization needs them blocked, do so.</p>&#13;
</section>&#13;
<section><span id="c08-sec-0014"/>&#13;
<h4 id="head-4-87">Trusted Platform Modules</h4>&#13;
<p id="c08-para-0059"><i>Trusted platform modules (or TPMs</i>) are specialized hardware devices, incorporated into the motherboard of the computer, phone, or tablet, that provide enhanced cryptographic-based device and process security services. A TPM is provided in a sealed, tamper-resistant hardware package that combines cryptographic services, host computer state descriptor information, and other data. TPMs are embedded into the computer's motherboard (so as to be non-removable), and in combination with device drivers and other software, achieve greater levels of security for that system. The Trusted Computing Group (TCG), a consortium of over 120 manufacturers, software houses, and cybersecurity companies from around the world, develops and publishes standards that describe what TPMs should do, <span epub:type="pagebreak" id="Page_449" role="doc-pagebreak" aria-label="449"/>and what they should not. The TCG defines trust in simple terms: a trusted device behaves in a particular, specified manner for a specified purpose. By storing key parameters about the host computer itself (chip-level serial numbers, for example), a TPM provides an extra measure of assurance that the computer system it is a part of is still behaving in the ways that its manufacturer intended. TPMs typically contain their own special-purpose, reduced instruction set computer; read-only memory for the control program; key, hash, and random number generators; and storage locations for configuration information, platform identity keys, and other data. TPMs are being incorporated into laptops, phones, and tablet systems, providing a world-class solution that is not strongly tied to or dominated by one manufacturer's chip set, operating system, or hierarchy of trust implementation.</p>&#13;
<p id="c08-para-0060">TPMs protect the hardware itself by making it less attractive to steal, or less useful (easier to lock) when the host computer or phone is lost or mislaid. Although the TPM does not control any software tasks (system or application) running on the host, it can add to the security of processes designed to make use of it. It's probably fair to consider a TPM an additional hardware countermeasure to help make software and communications more secure.</p>&#13;
</section>&#13;
</section>&#13;
<section><span id="c08-sec-0015"/>&#13;
<h3 id="head-3-199">Firmware Vulnerabilities</h3>&#13;
<p>Firmware is just software that has been put into nonvolatile, read-only memory; this memory can be onboard an integrated circuit chip, in programmable read-only memory (PROM) chips that can only be written (or “programmed”) once; in erasable or alterable PROM; or in other special-purpose storage technologies associated with a device. We can think of firmware as either permanently embedded in the device, or subject to update or alteration (authorized or unauthorized).</p>&#13;
<ul class="square" id="c08-list-0007">&#13;
<li id="c08-li-0024"><i>Firmware has its own unique vulnerabilities, which you need to take into consideration as you develop plans to harden your systems:</i> In late 2017 and early 2018, multiple researchers reported finding errors in the design of several widely used CPU and GPU chips. Known by names such as Spectre, Meltdown, and most recently TL-Bleed, these errors in chip design and very low-level firmware (on board the CPU or GPU chip itself) could lead to significant compromises of data and process security. Since the chips themselves are used in computers from many vendors, almost all major operating systems were at risk. OS vendors quickly responded with patches (most of which turned off high-performance features that could expose these vulnerabilities to exploitation) and then worked to redesign, test, and distribute new versions of kernel portions of their OS. As of September 2018, no exploits of these vulnerabilities had been found in the wild—that is, outside of white hat cybersecurity research and test labs.</li>&#13;
<li id="c08-li-0025"><i>Network and communications firmware as targets:</i> From SOHO routers and switches on up, all of the hardware that makes our networks work has firmware in it, and that firmware has been provided with update mechanisms that can be compromised. (It doesn't help that all of these devices are shipped with well-known full administrative user IDs such as “admin” and default passwords of “password…”). Consider <a href="#c08-fig-0002" id="R_c08-fig-0002">Figure 8.2</a>, an email received by the author recently. At first glance, it looks like a legitimate email notification from Netgear, announcing the availability of a new <span epub:type="pagebreak" id="Page_450" role="doc-pagebreak" aria-label="450"/>security update for its Nighthawk router family's onboard firmware. Great news! But… upon closer inspection, the email comes from a nonstandard email address for Netgear, and the embedded links are to definitely suspicious places on the Web (or maybe the Dark Web). Like many systems vendors, Netgear makes a lot of technical information available about its products, and encourages third-party and end-user customization; multiple hacks (presumably white hat hacks) of their device firmware are out there in the wild. Think about this, the next time you're staying in a bed-and-breakfast property or hotel and enjoying its free Wi-Fi connectivity.</li>&#13;
</ul>&#13;
<figure> <img alt="Snapshot shows firmware update." src="Images/c08f002.png" class="center" width="1218" height="1667"/>&#13;
<figcaption>&#13;
<p><span class="figureLabel"><a href="#R_c08-fig-0002" id="c08-fig-0002" role="doc-backlink">FIGURE 8.2</a></span> Is this firmware update good news?</p>&#13;
</figcaption>&#13;
</figure>&#13;
<section><span id="c08-sec-0016"/>&#13;
<h4 id="head-4-88">Protecting Your Firmware</h4>&#13;
<p><span epub:type="pagebreak" id="Page_451" role="doc-pagebreak" aria-label="451"/>For critical devices, firmware that can be updated should be treated as part of the configuration-controlled baseline and be subject to change controls and audits. Change management tools that allow you to poll devices to report their current firmware versions can make this task easier, but beware: if you can do this over your internal networks, this may mean that external threat actors can do this as well. Some consumer-friendly network products (or IoT products) do not provide easy ways to verify the version and date of their firmware, and depending on your risk profiles, this may be acceptable or not. It would be prudent to replace these with other products that are more configuration-management friendly! Like all software updates, you should have policies and procedures in place that only those legitimate firmware updates, received from the device manufacturer or other trusted source, are applied to devices when and how you need them to be updated. Keep a backup of the device's firmware and settings before the update, if possible; keep change control records as you apply updates.</p>&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3">&#13;
<h3><img alt="Warning" src="Images/warning.png" class="left" width="91" height="53"/> Never Deploy the Factory Default Settings!</h3>&#13;
<p id="c08-para-0065">This <i>should</i> go without saying. Those defaults are downright necessary to initially configure the device, and to reset it when you've lost configuration control of it or lost your own sysadmin user ID and password! But that's no excuse for leaving these doorways into your systems wide open.</p>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside>&#13;
<p id="c08-para-0066">Critical systems elements, including routers, switches, and firewalls, should also have a test and validation plan, which you can use to verify that a firmware update has not caused a mission-critical feature to fail to operate correctly, or introduced other issues that you'll need to work around. Such test and validation plans and procedures can be run periodically, even without updates being installed, as part of validating that the system element and the overall system are still functioning properly.</p>&#13;
</section>&#13;
</section>&#13;
<section><span id="c08-sec-0017"/>&#13;
<h3 id="head-3-200">Operating Systems Vulnerabilities</h3>&#13;
<p id="c08-para-0067">Operating systems provide a lucrative and attractive target to hackers. As of September 2018, Windows 10, for example, showed at least 650 entries in Common Vulnerabilities and Exposures (CVE) databases that are published online. Many of these CVE entries refer to configuration settings, such as Group Policy Objects, which individual Windows systems administrators must choose to enable and tailor to achieve their required security levels. Apple's operating systems, and the many variants of Linux, have their own fair share of reported vulnerabilities. Mobile device operating systems, such as Android, IOS, and Windows in its phone variants also have many reported vulnerabilities.</p>&#13;
<p id="c08-para-0068">Most widely used operating systems come with automatic update features built in. Enterprise IT environments can manage these updates (as “push” updates to groups of systems) as they need to, which provides an opportunity to first verify that the latest OS patch is still compatible with business-critical applications, platforms, and systems. SOHO systems users tend to just take the OS updates as and when they come.</p>&#13;
<section><span id="c08-sec-0018"/>&#13;
<h4 id="head-4-89">Malware and Your OSs</h4>&#13;
<p id="c08-para-0069"><span epub:type="pagebreak" id="Page_452" role="doc-pagebreak" aria-label="452"/><i>Malware</i>, or software that is malicious in intent and effect, is the general name for any type of software that comes into your system without your full knowledge and consent, performs some functions you would not knowingly authorize it to, and in doing so diverts compute resources from your organization. Malware has its origins in what we now call <i>white hat hacking</i> attempts by various programmers and computer scientists to experiment with software and its interactions with hardware, operating systems, and other computing technologies. As malware continues to evolve quite rapidly, the lines between the classical Trojan horse, virus, worm, or other types of malware blur very quickly.</p>&#13;
<p id="c08-para-0070">In general, malware consists of a vehicle or package that gets introduced into the target system; it may then release or install a payload that functions separately from the vehicle. Viruses, worms, scareware, and other types of malware typically bring payloads with them, in addition to performing other unauthorized and possibly harmful functions themselves. These payloads scan provide hidden, unauthorized entry points into the system (such as a Trojan horse), facilitate the exfiltration of sensitive data, modify data (such as system event logs) to hide the malware's presence and activities, destroy or corrupt user data, or even encrypt it to hold it for ransom. Malware payloads also form a part of target reconnaissance and characterization activities carried out by some advanced persistent threats, such as by installing keystroke loggers, spyware of various types, or scareware.</p>&#13;
<p id="c08-para-0071"><i>Trojan horse</i> malware (classically named) disguises its nefarious payload within a wrapper or delivery “gift” that seems attractive, such as a useful program, a video, or music file, or a purported update to another program. Other types of malware, such as viruses and worms, got their names from their similarities with the way such disease vectors can transmit sickness in animal or plant populations. <i>Viruses</i>, for example, infect one target machine and then launch out to attack others; worms look to find many instances within the target to infect, making their eradication from the host problematic. Malware payloads can also transform your system into a launch platform from which attacks on other systems can be originated. Payloads can also just steal CPU cycles by performing parts of a distributed computation by means of your system's CPUs and GPUs; other than slowing down your own work, such cycle-stealing usually does not harm the host system. Codebreaking and cryptocurrency mining are but two of the common uses of such cycle-stealing.</p>&#13;
<p id="c08-para-0072"><i>Rootkits</i> are a special class of malware that use a variety of privilege elevation techniques to insert themselves into the lowest-level (or kernel) functions in the operating system, which upon bootup get loaded and enabled before most anti-malware or antivirus systems are loaded and enabled. Rootkits, in essence, can give complete and almost undetectable control of your system to attackers and are a favorite of advanced persistent threats.</p>&#13;
</section>&#13;
<section><span id="c08-sec-0019"/>&#13;
<h4 id="head-4-90">Protecting Your OSs</h4>&#13;
<p id="c08-para-0073">First, make sure that each instance of an operating system (installed and operating on each computer, router, switch, or server) is included in your information systems baseline and in your configuration management and change control processes. Make sure that you can easily verify what version and patch or update level each such device is operating with. This is particularly important if your system does not support the ability to push updates to all such devices at the same time. Know which devices have not yet been updated, and, depending on the <span epub:type="pagebreak" id="Page_453" role="doc-pagebreak" aria-label="453"/>nature of the update, have plans in place for appropriate levels of extra monitoring to ensure that vulnerabilities are not exploited while waiting for the patches to be applied.</p>&#13;
<p id="c08-para-0074">Almost all operating systems vendors provide their code in digitally signed release packages, which you can use to validate that the software distribution kit is authentic and has not been tampered with. Additionally, many operating systems have built-in tools that allow users to validate that OS libraries (directory trees) contain only authorized, signed, current files, matching a manifest list that came with the patch or update distribution. Your organization's systems administrators should be using these capabilities as part of the update installation and verification process.</p>&#13;
<p id="c08-para-0075">It is vitally important to note that many of the published CVE items have been addressed by one or more patches or updates from the respective software vendor. Despite this, any number of headline-making data breaches are made possible (or made easier) because of patches and updates that have not yet been applied. It is common sense and good computing hygiene to routinely compare your organization's information systems security baseline against published CVE data.</p>&#13;
<p id="c08-para-0076">As with all software changes, your organization should have a validation test process that confirms that updates have been successfully and completely installed, that they work correctly, and that all critical systems functions and services are still in working order.</p>&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3"><span id="c08-fea-0001"/>&#13;
<h3 id="head-2-142">You've Been Orphaned—Now What?</h3>&#13;
<section><span id="c08-sec-0020"/>&#13;
<p id="c08-para-0077">More often than the industry might want to admit, users are faced with perfectly working hardware and applications that are no longer supported by their manufacturer or software vendor. This can happen to operating systems, device drivers for peripherals, applications that manage those peripherals, or general purpose applications. These become orphans when their vendor or manufacturer will no longer provide updates for them, particularly to port or migrate their software to a new version of the target operating systems. When Microsoft declared that Windows XP, for example, was (for many good reasons) beyond its support life, many printers, photo and document scanners, and even medical laboratory instrument manufacturers had to follow suit and orphan their products. The National Health Service in the U.K. faced a significant financial impact and an information security dilemma, as it had to either continue to run clinics all across the country on Windows XP, or purchase a substantial amount of new hardware and applications.</p>&#13;
<p id="c08-para-0078">Sometimes, your business can protect itself from being stuck with an orphaned technology by means of negotiating a software escrow agreement. This places all of the source code, design, and maintenance documentation, and test drivers and test data into a third party's secure storage; if the vendor goes out of business, the escrow is opened and the code and related information are given to the escrow purchaser. While this may reduce the risk of being left high and dry if the manufacturer or vendor goes out of business, it can be very expensive—and it still leaves your business tied to an obsolete set of software that you now have to migrate to a new OS environment.</p>&#13;
<p id="c08-para-0079">Software or source code escrow can also help insure that the source code developed by a third party specifically for your business is not at risk if the third party goes out of business. It can be a useful option, but it's not inexpensive.</p>&#13;
</section>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside>&#13;
</section>&#13;
</section>&#13;
<section><span id="c08-sec-0021"/>&#13;
<h3 id="head-3-201">Virtual Machines and Vulnerabilities</h3>&#13;
<p id="c08-para-0080"><span epub:type="pagebreak" id="Page_454" role="doc-pagebreak" aria-label="454"/>More and more organizations are using virtual machine technologies to extend their computing capabilities, even before they move into a cloud environment. On a bare metal computer or server, as we saw earlier, the bootstrap process loads several layers of functionality before the operating system itself is loaded and takes control of the computer. Up until this happens, any operating system (that can execute on that CPU's instruction set) can be loaded. That OS will use physical RAM and virtual memory to load and manage the execution of applications programs. This copy of the operating system is in essence a virtual machine, running on top of the lowest level of kernel functions that deal directly with the hardware. Application programs “see” the OS and its set of services; they are insulated from the bare metal below it. As early as 1972, IBM created the first <i>hypervisor</i>—a program specifically designed to sit between the bare metal computer and multiple instances of operating systems and applications, each with its own virtual memory address space. This type of hypervisor architecture is perhaps the most prevalent in the industry today. Type two (or <i>hosted</i>) hypervisors load as applications under the control of a fully loaded operating system, and then load, execute, and supervise virtual machines to meet user needs. Most systems today require hardware support for virtualization to run efficiently. Regardless of which type of hypervisor your systems are using, one virtue of virtual machines is that the host environment (hypervisor on bare metal or hosted hypervisor) encapsulates the virtual machine's operating system, applications, and data storage; each VM has its own separate file system, and applications running on one VM cannot bleed into or access memory on another VM.</p>&#13;
<p id="c08-para-0081">Creating a new instance of a virtual machine is a simple matter of a few mouse clicks. Instead of leasing new hardware, getting it shipped to your datacenter, installing it, testing it, and making it available for use, businesses can multiply the number of computers available to meet their processing needs within a few moments, and then give back the excess capability when they don't need it anymore. VMs in public or hybrid clouds rent by the second of CPU time. Private clouds still need the bare metal (and RAM, and disk space) to execute in, but a thoughtful VM strategy can get far more utility per month out of that hardware than a simpler strategy that preassigns users and tasks to specific machines.</p>&#13;
<p id="c08-para-0082">This sounds ideal, doesn't it? Up until the VM needs to communicate to the outside world, and share resources on a network with other machines (virtual or not), it is. Software testing environments using VMs as containers provide robust sandboxes in which to test new versions of systems by means of this separation.</p>&#13;
<p id="c08-para-0083">Once your VMs start to share resources—once they connect via software-defined networks to form a virtual cluster of processing and storage capabilities—problems on one VM do have the opportunity to bleed over onto other VMs. The most frequently reported problem in Amazon Web Services in 2017, for example, was poorly configured cloud data storage <i>blocks</i>, rather than “virtual disks”; user errors in setting up these storage facilities were the proximate cause cited by Amazon.</p>&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3"><span id="c08-fea-0002"/>&#13;
<h3 id="head-2-143">Blobs: Binary Large Objects</h3>&#13;
<section><span id="c08-sec-0022"/>&#13;
<p id="c08-para-0084"><span epub:type="pagebreak" id="Page_455" role="doc-pagebreak" aria-label="455"/>Cloud data storage services need to allow users to define how much storage they need without being tied down by the storage capacity of a disk drive. AWS refers to this as <i>object storage</i>, while Microsoft Azure calls it <i>blobs</i>. Blobs (and that Microsoft term is <i>not</i> an acronym) can range from the “tiny blob” of 64 KB, up through the blob, mediumblob, and longblob. This allows the cloud services provider the freedom to spread blobs across disk drives of many types and sizes, support encryption at the blob level, or provide other storage management capabilities independently of the specific storage technologies being used.</p>&#13;
</section>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside>&#13;
<p id="c08-para-0085">That very capability for near-instant growth in your VM fleet is also an opportunity for complexity in your security architecture. Unless each VM you create is just another copy of a proven, tested, well-controlled baseline system, your security management workload goes up with each VM you instantiate.</p>&#13;
<section><span id="c08-sec-0023"/>&#13;
<h4 id="head-4-91">Protecting Your VMs (and Protecting Your Other Systems from Them!)</h4>&#13;
<p id="c08-para-0086">The nature of your organization, its IT system needs, and its risk profile may very well dictate limits or constraints on which users can create what sort of virtual machines, for what purposes, and in what sort of environments. Software development and test, for example, should have procedures that control creation, use, and disposal of VM containers used as part of such development and test activities. Typically, most users would not need to do this; instead, they'd be interacting with some kind of platform or infrastructure set of services, and as they demand more from those services, this would lead to VMs being <i>spun up</i> (created or instanced) to meet their needs.</p>&#13;
<p id="c08-para-0087">Once such policy considerations have been made, and administrative actions taken to publish and promulgate them, the IT experts can work to implement the right set of controls so that those users who need to create and use VMs can do so. Policy should also dictate suitable logging and monitoring, as required.</p>&#13;
</section>&#13;
</section>&#13;
<section><span id="c08-sec-0024"/>&#13;
<h3 id="head-3-202">Network Operating Systems</h3>&#13;
<p id="c08-para-0088">It used to be that individual computer systems (be they desktops or minicomputers) had operating systems that did not have networking capabilities built into them; add-on products like NetWare or Banyan VINES needed to be used to make networking with other devices or the Internet possible. As the market drove toward a monoculture solution—almost the entire world uses TCP/IP—these support stacks of software functions got integrated with the operating systems. Today, all supported variants of Windows, macOS, and Linux are network operating systems as much as they are computer operating systems. The line between being a computer and being a network device has largely disappeared.</p>&#13;
<p id="c08-para-0089"><span epub:type="pagebreak" id="Page_456" role="doc-pagebreak" aria-label="456"/>What this means is that the network operating system has morphed into a distributed set of subsystems. The datacenter shown in <a href="#c08-fig-0001">Figure 8.1</a> suggests that the operational command, control, and synchronization services, the resource allocation, assignment, and task or process control functions now are shared responsibilities. The routers (at all levels), each rack full of servers, and each server itself, all become elements in a shared resource pool, often called a <i>service fabric</i>. Individual subjects (human users or processes invoked at their behest) have their needs addressed by the datacenter, which is managed by this distributed set of operating system functions, which are collectively controlled by the service fabric manager functions.</p>&#13;
<p id="c08-para-0090">Whether that network operates as an integrated, tightly coupled set of subsystems or a loosely coupled set of systems that cooperate on a best-effort basis depends on choices made by its designers, builders, and managers. From the SSCP's perspective, the question is whether its security functions work together in an integrated, cohesive way or not. Do all of the security features and functions, in all of the hardware and software on the network, provide integrated command, control, and communications regarding security functions, alarms, and conditions? Or does the SSCP have to become the commander and orchestrate, dispatch, run, review, and monitor all of the security functions, and <i>then</i> collate all of the outputs, log files, and alarms from all of those security “troops” into a common security operational picture?</p>&#13;
<section><span id="c08-sec-0025"/>&#13;
<h4 id="head-4-92">Protecting the Networks</h4>&#13;
<p id="c08-para-0091">As you saw in <a href="c05.xhtml">Chapter 5</a>, “Communications and Network Security,” there's a wealth of technology and procedural countermeasures and protective measures regarding network systems security that ought to be part of your overall systems security approach and strategy. Let your risk mitigation planning drive your needs here—use that to identify timelines for prompt detection and response.</p>&#13;
<p id="c08-para-0092">One powerful technique is to provide for <i>remeditation quarantine</i> to enforce security requirements for endpoints to be properly configured and updated prior to connection. Implementing this “current endpoint health check” requires the connection process to interrogate the endpoint to determine its hardware and software characteristics, including the presence of security-critical updates and patches. This usually will include interrogating the endpoint's onboard anti-malware, software blocked / allowed list management, or other host-based intrusion detection and prevention systems. Endpoints failing to meet all of the connection requirements can either be routed to a quarantine web page, where their user can find instructions and information pertaining to the required updates, or to a remediation sandbox in which the user can perform such updates. Once the device passes muster, a similar process can also be invoked as part of its user's login attempt: users with outstanding training needs, or who need to complete urgent new training tasks, can be quarantined off to a similar set of web pages or a sandbox for that purpose. (This is similar to web pages that require users to review, or at least click through, new systems announcements prior to moving on to access other system resources.)</p>&#13;
<p id="c08-para-0093"><span epub:type="pagebreak" id="Page_457" role="doc-pagebreak" aria-label="457"/>In addition, UEBA capabilities can also be used to identify endpoints or entities they support which might be behaving in suspicious ways.</p>&#13;
</section>&#13;
<section><span id="c08-sec-0026"/>&#13;
<h4 id="head-4-93">Intrusion Detection and Prevention</h4>&#13;
<p id="c08-para-0094">Intrusion detection systems (IDSs) monitor attempts to access system resources to determine if such attempts are legitimate or are potential hostile intrusions. Host-based intrusion detection systems (HIDSs) are software applications that run on a host computer, such as a server, workstation, laptop, or smartphone or other mobile devices. They are installed so that they become part of the operating system boot sequence, much like antivirus systems are, and they typically work by focusing on attempts to violate access control policies and mechanisms. Network-based intrusion detection systems (NIDSs) are separate hardware and software platforms that sit between the protected, managed portions of your network and less secure zones (such as the Internet). Unlike HIDSs, NIDSs monitor network traffic and alert when packets attempt to access ports, services, or addresses, or attempt other actions that the NIDS is configured to detect.</p>&#13;
<p id="c08-para-0095">Both kinds of intrusion detection systems can use either an anomaly-based detection or a signature-based detection approach. Anomaly detection requires that the IDS be able to “learn” from normal system or network usage, typically using machine learning approaches. For example, if normal traffic sees very small upload data volumes compared to download, a sudden spike in outbound data might be an anomaly worth noting, perhaps a data exfiltration attempt underway. Signature-based detection requires analytical efforts to take a known exploit, observe and identify key parameters that are associated with that exploit, and then scan traffic through the IDS looking for that signature. Detection of a possible intrusion, in any case, signals an alarm condition, which may result in a real-time notice to an administrator, log entries, or other alert actions. Some IDS systems of either type may also be able to act as intrusion prevention systems (IPSs). IPSs can be programmed to shut down or block a suspect connection, route it instead to a quarantine area or <i>honeypot</i>, or take other actions to contain the impacts of the potential intrusion.</p>&#13;
</section>&#13;
</section>&#13;
</section>&#13;
<section aria-labelledby="head-2-144"><span id="c08-sec-0027"/>&#13;
<h2 id="head-2-144">Endpoint Security</h2>&#13;
<p id="c08-para-0096">As was suggested by the introduction to this chapter, the security of endpoint devices epitomizes the idea of security being a two-way street: systems must be protected from endpoints that may be part of an attack, and the endpoints themselves must be protected from attacks that flow from the systems out to the endpoints and the devices, people, or activities they serve and interact with. This involves answering several sets of questions.</p>&#13;
<p id="c08-para-0097">The first set of questions involve the current security state or status of the system, each endpoint connected to it, and the apps, VMs, or software entities running or hosted on those devices. These <i>security health and status checks</i> will attempt to verify if operating systems, firmware, and applications have been updated or patched to the level currently required by system security policy, and that all protection systems (such as anti-malware, software allowed/blocked listing control systems, and others) have their definition, parameter, model, or <span epub:type="pagebreak" id="Page_458" role="doc-pagebreak" aria-label="458"/>signature data current and updated as well. Health checks may also need to verify that the integrated access control and management data on board the endpoint has also been properly updated.</p>&#13;
<p id="c08-para-0098">That set of questions works well with a one-on-one relationship between the system and the endpoint, which allows the endpoint to view the system as a stable, defined, unitary whole, and the system to deal with each endpoint as a separate and distinct set of sessions, services, and support needs. That simple architectural model is fairly easy to develop behavioral models for as well. But complications arise, and looking at endpoint security as an endpoint-by-endpoint pass-fail kind of task is no longer sufficient.</p>&#13;
<p id="c08-para-0099">The first complication reflects the fact that the system can no longer assume that each endpoint is serving the needs and responding to the commands of a single entity; in addition, that entity's identity can be unambiguously determined and authenticated. Legitimate end users may use the same endpoint (a Windows workstation or a smartphone) to establish multiple connections to your system, each via different applications and using multiple identities in the process. Attackers, too, are no longer presenting themselves to the doorways into your system as if they are a single, unitary entity. Advanced persistent threats (APTs) may use many different entities, each with many identities, to establish, initiate, operate, and supervise the elements of their attack infrastructure. The same Android smartphone, for example, might be simultaneously providing a mix of legitimate user sessions of activity and a variety of sessions, probes, scans, and other actions being run by a number of different unauthorized, unknown, and presumably hostile entities. At the same time, the same legitimate and hostile set of entities might be using <i>other</i> endpoints to connect to your systems with.</p>&#13;
<p id="c08-para-0100">At this point, you'd be right to wonder if endpoint security is something that can be done on a by-the-endpoint approach at all or if the only way to determine whether an attack is ongoing is to attempt to model and analyze the behavior of larger and larger sets of endpoints and the entities that control them. Both approaches are necessary; both are proving to require broader, deeper threat intelligence insight and understanding with every day that passes.</p>&#13;
<p>Unfortunately, the security systems and services vendor community has not made one part of this job any easier. There's been a mini-explosion of acronyms and names for this set of needs: EDR, MDR, XDR, and EPP for starters, best thought about by breaking them down letter by letter:</p>&#13;
<ul class="square" id="c08-list-0008">&#13;
<li id="c08-li-0026">E for endpoint</li>&#13;
<li id="c08-li-0027">M for managed</li>&#13;
<li id="c08-li-0028">D for detection</li>&#13;
<li id="c08-li-0029">R for response</li>&#13;
<li id="c08-li-0030">P for protection or platform</li>&#13;
<li id="c08-li-0031">X for “almost anything”</li>&#13;
</ul>&#13;
<p id="c08-para-0102">Each of these acronyms and its viewpoint has its own hype cycles, which often proclaim that one of the others is “dead,” no longer relevant to the problem at hand. All seem to be silent as to what, exactly, is being detected or responded to (presumably <i>T</i> for threat). Another acronym, MSSP, also comes up in the endpoint security context, reflecting that <i>managed security services providers</i> may be better placed than many end user organizations to <span epub:type="pagebreak" id="Page_459" role="doc-pagebreak" aria-label="459"/>provide more current threat intelligence insights and the breadth and depth of technical skills needed to deliver endpoint security on a sustaining basis.</p>&#13;
<p id="c08-para-0103">In most instances, your endpoints are themselves full and complete systems in miniature. Keeping them safe and secure, both so that they do not threaten your enterprise architecture and its infrastructure, nor can they be attacked from within that architecture, has become a more challenging task as a result.</p>&#13;
<p id="c08-para-0104">Mobile endpoints, such as phones and phablets, are prime examples of this. Let's look further at some of the techniques being used to secure them, both as systems on their own and as endpoints of your organization's overall architecture.</p>&#13;
<section><span id="c08-sec-0028"/>&#13;
<h3 id="head-3-203">MDM, COPE, and BYOD</h3>&#13;
<p id="c08-para-0105">For many very sensible reasons, many businesses and organizations turn to mobile computing as a part of their IT infrastructure. As you saw in <a href="c05.xhtml">Chapter 5</a>, this approach avoids many of the costs of a physical, wired infrastructure but brings with it the need for added attention to wireless security and mobile device management. Company-owned or provided mobile devices, such as laptops, phablets, phones, or even printers, can be a great way to leverage the IT budget quickly. <i>Mobile device management</i> (MDM) systems provide a variety of integrated tools that can help the organization maintain awareness of its mobile assets, track their usage, and provide management with insight and control of software, firmware, and data updates on these devices. When the organization controls these devices, it's reasonable to expect that the full gamut of acceptable use, configuration management and control, and other risk management policies apply to employees using such devices. These devices are of course subject to loss or theft, and as a result, the better MDM solutions provide ways to ensure that lost devices can be locked or zeroized to prevent data on the device being accessed, or the device being used to access the organization's networks and systems.</p>&#13;
<p id="c08-para-0106"><i>Bring your own devices (BYOD)</i> is the term for when organizational IT infrastructures have to deal with computing and communications equipment, software, security tools, and data that do not belong to the organization and are not under its legal span of control. From its early days of floppy disks, thumb drives, and telecommuting to today, this has grown bewilderingly. Vendors, customers, prospective employees, and visitors of any kind to the business's locations, even family and friends of employees, all can bring in their own phones, laptops, tablets, and smart watches, and all have varying expectations about connecting to or making use of your organization's IT infrastructure. In many cases it's to the company's advantage to encourage employees to own and operate their own equipment, but it comes with up-front and downstream costs and risks.</p>&#13;
<p><i>Company-owned personally enabled (COPE)</i>, as the name suggests, refers to strategies in which the organization owns and exerts some configuration management, application allowed / blocked list management, and security feature enforcements on the device that it issues to an individual employee. The employee can then (within policy limits) install applications and data for work-related or purely personal use. An example might be a university that provides laptops to its full-time faculty for the purpose of work-related teaching, courseware development, research, and organizational service tasks, knowing that the laptops can and will be used for purely personal (professional or other) activities.</p>&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3">&#13;
<h3><img alt="Note" src="Images/note.png" class="left" width="76" height="53"/> CYOD?</h3>&#13;
<p id="c08-para-0109"><span epub:type="pagebreak" id="Page_460" role="doc-pagebreak" aria-label="460"/>Choose your own device (CYOD) is a common variation on the COPE theme, in which the organization owns or leases a smaller set of device types and issues them to employees to use with company systems and data. Employees can choose from this limited set, but are restricted from using personally owned devices with company data or systems. While this reduces the IT configuration management issues and makes the threat surface more manageable, it doesn't directly address visitor, customer, client, or guest use of mobile devices at the edges of the organization's systems.</p>&#13;
<p id="c08-para-0110">Note that CYOD and COPE can refer to <i>company</i> or <i>corporate</i> ownership (or lease) and management of the devices.</p>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside>&#13;
<p>Key issues that the SSCP can advise management about include but are not restricted to:</p>&#13;
<ul class="square" id="c08-list-0009">&#13;
<li id="c08-li-0032">Device access control, possibly using multifactor authentication</li>&#13;
<li id="c08-li-0033">Lost device locking or erasure of company content, software, encryption keys, and certificates</li>&#13;
<li id="c08-li-0034">Commingling of personal, non-work-related data and apps on the same device with company data</li>&#13;
<li id="c08-li-0035">Roaming security policies and practices that BYOD company users must abide by</li>&#13;
<li id="c08-li-0036">Device location tracking, usage tracking, and security analytics to support ongoing network and systems monitoring</li>&#13;
<li id="c08-li-0037">Policy restrictions on other non-employees using the BYOD device</li>&#13;
<li id="c08-li-0038">Restrictions on use of the BYOD device as a Wi-Fi hotspot or as part of other networks</li>&#13;
<li id="c08-li-0039">Auditing of the BYOD device content and usage</li>&#13;
<li id="c08-li-0040">Policies and procedures for enforcing the use of encryption to protect sensitive data or software on endpoints (regardless of who owns the device)</li>&#13;
<li id="c08-li-0041">Software and firmware update control and audit, both of software required for the business and software desired by the device-owning employee</li>&#13;
</ul>&#13;
<p id="c08-para-0112">At the moment, the MDM marketplace and community of practice is still struggling to find a common set of requirements that can be addressed by a common infrastructure solution. One major problem is deciding whether the BYOD security problem is anything different than what we face with endpoint security and data in motion regardless of who owns or exerts configuration management and control over the endpoint. This is a fundamental concern that has to be addressed in the context of the organization and its mission.</p>&#13;
</section>&#13;
<section><span id="c08-sec-0029"/>&#13;
<h3 id="head-3-204">BYOI? BYOC?</h3>&#13;
<p id="c08-para-0113">Many businesses and organizations have to deal with a greatly expanded version of the BYOD problem set, sometimes called <i>bring your own infrastructure</i> (BYOI). BYOI calls attention to the potential security issues that arise when smartphones, laptops or phablets, and even wearable computing devices bring hotspot connectivity, shared storage, and even <span epub:type="pagebreak" id="Page_461" role="doc-pagebreak" aria-label="461"/>shared or personally managed cryptographic resources to the workplace. In some situations, the nature of work itself, and the nature of the employee-employer relationship, morphs in innovative and disruptive ways. Taxi drivers, for example, are often using their personally owned devices to communicate with dispatchers, provide contact with customers for private bookings, conduct payment and billing operations, and even provide a W-Fi hotspot for passenger use. <i>Bring your own cloud (BYOC)</i> is an example of this, as it combines personal, consumer-facing cloud services (such as Dropbox) with enterprise-level cloud capabilities. While a SharePoint or other integrated platform as a service typically won't work well with personal cloud systems (or even other vendors' PaaS capabilities), the real security risk is that such mixtures of capabilities provide fertile ground for covert paths, aggregation of privileges, and aggregation of sensitive information across data classification boundaries.</p>&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3"><span id="c08-fea-0003"/>&#13;
<p><img alt="Realworld" src="Images/realworld.png" class="left" width="239" height="36"/></p>&#13;
<h3 id="head-2-145">Endpoints, Clinically Speaking</h3>&#13;
<section><span id="c08-sec-0030"/>&#13;
<p id="c08-para-0114">It's tempting to believe that thoroughly securing the endpoints would solve all of our information security problems. Let's look at a clinical situation and see if it is indeed the endpoints where the risks are most challenging.</p>&#13;
<p id="c08-para-0115">A modern postoperative recovery room needs to provide highly responsive patient monitoring capabilities, which can be tailored in real time to meet the needs of each individual patient's immediate recovery from surgery. Medical instrumentation has become network-enabled, tied into the hospital's information infrastructures. Medical and nursing staff must be able to quickly set up a postoperative monitoring environment for a patient coming out of surgery, and in some instances tie that monitoring into real-time trending and analysis tools that can promptly alert nurses and doctors to changes in patient condition (be they good news or bad news). Privacy is as important as data segregation: cross-connecting Patient A's vital signs data into Patient B's real-time treatment monitoring and alerting processes could be fatal for both patients, and possibly business-terminal for the hospital as well!</p>&#13;
<p id="c08-para-0116">In a mobile device–enabled clinical environment, each care team member might have their own personal digital assistant, phablet, or other device that they use as they interact with each patient and the devices monitoring that patient's condition. In other clinical environments, bedside “care terminals” might be used by the care staff instead.</p>&#13;
<p id="c08-para-0117">More than many of us realize, situations like this have become a part of our everyday reality. While safety-critical security needs seem paramount in this scenario, all of the other CIANA+PS needs are present as well. Which of those attributes, if any, seems to you to be the primary one—as if by fully satisfying its needs, you've had to fulfill or invoke (and thus also satisfy) all of the others?</p>&#13;
<p id="c08-para-0118">Look beyond the endpoints in situations like this. What other system elements are involved in ensuring safety and security?</p>&#13;
</section>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside>&#13;
<section><span id="c08-sec-0031"/>&#13;
<h4 id="head-4-94">Protecting Your Systems and Your Mobile Devices</h4>&#13;
<p><span epub:type="pagebreak" id="Page_462" role="doc-pagebreak" aria-label="462"/>Much as you saw when thinking about virtual machines, mobile device use with your systems brings with it a two-part question: how do you protect the mobile devices themselves from loss, compromise, or attack, and how <i>else</i> do you need to protect your core systems and infrastructure from mobile devices that might have gone rogue? Multiple technology and policy actions have to come together in a concerted fashion to provide the required set of information security needs when you include mobile devices in the mix. These include the following:</p>&#13;
<ul class="square" id="c08-list-0010">&#13;
<li id="c08-li-0042">Identity management and access control systems need to be robust enough to ensure that mobile devices of any kind have a very restricted set of entry points into your bastion systems. Unless there is a true mission-critical need, consider blocking off, disabling, or removing any dial-in telephone access, for example.</li>&#13;
<li id="c08-li-0043">Although network management systems can do MAC address filtering, and thus block all but authorized user devices from connecting, when your mobile user population gets large this can become unwieldy. Instead, you're forced to rely on validating the user, not the mobile device, in most cases. MDM systems may help here, but only if your organizational mission and business processes can be achieved with a reasonably static list of devices being connected. Retail establishments, schools, and many public-facing government organizations may need to allow almost any device to connect, instead relying on user-level authentication for access control.</li>&#13;
<li id="c08-li-0044">Network firewall systems provide additional protection by filtering on services, ports, and so on; this requires that the organization can identify what services to allow and which ones to block, to be practicable.</li>&#13;
<li id="c08-li-0045">Antimalware technologies and processes should also be part of the layered defense between mobile devices and the core system infrastructures.</li>&#13;
<li id="c08-li-0046">Emergency procedures need to be developed and in place that provide for timely locking, zeroizing, or <i>bricking</i> of mobile devices that are under company management, either as company-owned, COPE, or BYO devices covered by usage policies.</li>&#13;
</ul>&#13;
</section>&#13;
</section>&#13;
</section>&#13;
<section aria-labelledby="head-2-146"><span id="c08-sec-0032"/>&#13;
<h2 id="head-2-146">Malware: Exploiting the Infrastructure's Vulnerabilities</h2>&#13;
<p id="c08-para-0120">Having looked at some of the most common exploitable vulnerabilities in the hardware, firmware, and software that make up our information infrastructures, let's turn and look at how those vulnerabilities get exploited. Simply put, it usually takes a combination of hacker activities, including specialized software tools, to be able to scan your system for vulnerabilities, identify and characterize them, and then interact with those vulnerabilities to achieve the desired outcomes. Those outcomes may be end goals in themselves, or steps in <span epub:type="pagebreak" id="Page_463" role="doc-pagebreak" aria-label="463"/>a larger plan of attack. One of the most common categories of exploit tools is called <i>malware</i>.</p>&#13;
<p>Malware is best classified not by type of malware, but by the discrete functions that an attacker wishes to accomplish. For example, attackers might use malware as one way of:</p>&#13;
<ul class="square" id="c08-list-0011">&#13;
<li id="c08-li-0047">Providing undetected or backdoor access into a system</li>&#13;
<li id="c08-li-0048">Creating new users, including privileged users, surreptitiously</li>&#13;
<li id="c08-li-0049">Gathering data about the target system, its installed hardware, firmware, and software, and peripherals</li>&#13;
<li id="c08-li-0050">Using the target system to perform reconnaissance, eavesdropping, or other activities against other computers on the same LAN or network segment with it</li>&#13;
<li id="c08-li-0051">Installing new services, device drivers, or other functions into operating systems, applications, or utility programs</li>&#13;
<li id="c08-li-0052">Elevating the privilege of a task or a user login beyond what normal system controls would allow</li>&#13;
<li id="c08-li-0053">Elevating a user or task to root or full, unrestricted systems administrative privilege levels</li>&#13;
<li id="c08-li-0054">Bypassing data integrity controls so as to provide undetected ability to modify files</li>&#13;
<li id="c08-li-0055">Altering or erasing data from log files associated with system events, resource access, security events, hardware status changes, or applications events</li>&#13;
<li id="c08-li-0056">Copying, moving, or deleting files without being detected, logged, or restricted</li>&#13;
<li id="c08-li-0057">Bypassing digital signatures, installing phony certificates, or otherwise nullifying cryptographic protections</li>&#13;
<li id="c08-li-0058">Changing hardware settings, either to change device behavior, or to cause it to damage or destroy itself (such as shutting off a CPU fan and associated over-temperature alarm events)</li>&#13;
<li id="c08-li-0059">Surreptitiously collecting user-entered data during login events or other activities</li>&#13;
<li id="c08-li-0060">Recording and later transmitting records of system, user, or application activities</li>&#13;
<li id="c08-li-0061">Allocating CPU, GPU, and other resources to support surreptitious execution of hacker-desired tasks</li>&#13;
<li id="c08-li-0062">Generating and sending network or system traffic to other devices, or to tasks on other systems</li>&#13;
<li id="c08-li-0063">Launching malware-based or other attacks against other systems</li>&#13;
<li id="c08-li-0064">Establishing webpage connections and transacting activity at websites of the hacker's choice</li>&#13;
<li id="c08-li-0065">Encrypting files (data or program code) as part of ransomware attacks</li>&#13;
<li id="c08-li-0066"><span epub:type="pagebreak" id="Page_464" role="doc-pagebreak" aria-label="464"/>Establishing hidden peer-to-peer or virtual private network connections with other systems, some of which may possibly be under the hacker's control</li>&#13;
<li id="c08-li-0067">Running tasks that disrupt, degrade, or otherwise impact normal work on that system</li>&#13;
<li id="c08-li-0068">Controlling multimedia devices, such as webcams, microphones, and so forth, to eavesdrop on users themselves or others in the immediate area of the target computer</li>&#13;
<li id="c08-li-0069">Monitoring a mobile device's location and tracking its movement as part of stalking or tracking the human user or the vehicle they are using</li>&#13;
<li id="c08-li-0070">Using a variety of multimedia or other systems functions to attempt to frighten, intimidate, coerce, or induce desired behavior in the humans using it or nearby it</li>&#13;
</ul>&#13;
<p><i>Procedural misuse</i> of built-in capabilities, whether by honest mistake or deliberate choice, has also exploited (and in some cases discovered) systems vulnerabilities. As early as the 1960s, many batch job computer systems were known to be vulnerable to denial-of-service attacks by simply submitting a <i>rabbit</i>, a job that made six copies of itself. Input queues would fill up and put the system into a wait state until the backlog of jobs could complete. Such misuse is not “malware” per se, but whether it's an attack, a penetration test, or a mistake depends upon intent.</p>&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3">&#13;
<h3><img alt="Warning" src="Images/warning.png" class="left" width="91" height="53"/> Beware Attackers Living Off the Land</h3>&#13;
<p id="c08-para-0126">In July 2017, Symantec's research showed an increasing number of ransom attacks—<i>not</i> ransomware!—in which the attackers used social engineering and other surreptitious, non-malware-based means to gain initial entry into target systems; they then used built-in systems functions to prepare target file systems for encryption at their command. In many cases, these attacks create few if any files at all on the target system, making it extremely difficult for most antimalware, software allowed / blocked list management or intrusion detection and prevention technologies to recognize them for what they are. The attackers can also use the same systems functions to cover their tracks.</p>&#13;
<p id="c08-para-0127">Symantec's bottom-line recommendation: multifactor user identification, combined with strong access control, is still the foundation of any well-managed IT security program.</p>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside>&#13;
<p id="c08-para-0128">It's interesting to note that many of the behaviors of common malware can resemble the behavior of otherwise legitimate software. This can lead to two kinds of errors. False positive errors are when the malware detection system marks a legitimate program as if it were malware, or quarantines or blocks attempts to connect to a webpage mistakenly “known” to be a malware source. False negative errors occur when actual malware is not detected as such and is allowed to pass unreported.</p>&#13;
<p id="c08-para-0129">Malware can be introduced into a system by direct use of operating systems functions, such as mounting a removable disk drive; just as often, malware enters a system by users interacting with “applications” that are more than what they seem, and come with hidden side effects. Malware often needs to target operating systems functions in order to be part of a successful attack. Most of what you have to do as an SSCP to protect your <span epub:type="pagebreak" id="Page_465" role="doc-pagebreak" aria-label="465"/>infrastructure from malware intrusions must take place inside the infrastructure, even if the path into the system starts with or makes use of the application layer. (Some applications, such as office productivity suites, do have features that must be tightly controlled to prevent their being misused to introduce malware into a system; we'll explore these in <a href="c09.xhtml">Chapter 9</a>.)</p>&#13;
<section><span id="c08-sec-0033"/>&#13;
<h3 id="head-3-205">Countering the Malware Threat</h3>&#13;
<p id="c08-para-0130">It would not be too much of an exaggeration to say that everything else in this book is part of what you need to do to block malware from entering into your protected infrastructures, detecting it when it does, and then eradicating it or limiting its impacts to your ongoing business operations. From user awareness, training, and education on down to adroit and effective configuration management and change control, keeping unwanted software and data <i>out</i> of your systems requires every tool in your SSCP bag of tricks brought to bear at the right time, the right place, and in the right ways.</p>&#13;
<p>Rather than repeat all of those countermeasures here, let's just focus on antivirus or antimalware systems. Software antimalware or antivirus systems perform a range of functions as they help protect your computer systems:</p>&#13;
<ul class="square" id="c08-list-0012">&#13;
<li id="c08-li-0071">Scanning your system to check for files that may be malware-infected or malware in disguise</li>&#13;
<li id="c08-li-0072">Inspecting the digital signatures of specific directories, such as boot sectors and operating system kernels, to check for possible surreptitious changes that might indicate malware</li>&#13;
<li id="c08-li-0073">Inspecting processes, services, and tasks in main memory (or in virtual page swap areas) to detect any infected executable code</li>&#13;
<li id="c08-li-0074">Inspecting macros, templates, or other such files for suspicious or malicious code or values</li>&#13;
<li id="c08-li-0075">Moving suspect files or objects to special quarantine areas, and preventing further movement or execution of them</li>&#13;
<li id="c08-li-0076">Inspecting operating systems control parameter sets, such as the Windows Registry hives, for signatures or elements suggestive of known malware</li>&#13;
<li id="c08-li-0077">Monitoring system behavior to detect possible anomalies, suggestive of malware in action</li>&#13;
<li id="c08-li-0078">Monitoring incoming email or Web traffic for possible malware</li>&#13;
<li id="c08-li-0079">Monitoring connection requests against lists of blocked sites</li>&#13;
</ul>&#13;
<p id="c08-para-0132">Similar to intrusion detection and prevention systems, malware detection and prevention systems can use a combination of anomaly detection and signature analysis to look for probable malware. Most consumer-grade antivirus systems (freeware and paid-subscription both) rely heavily on signature analysis, and thus frequent updates to the signature files are necessary to maintain your infrastructure's “immune system.”</p>&#13;
<p id="c08-para-0133">Malware defense can run in layers, and in larger enterprise systems, it is probably best to deploy it in multiple ways. Incoming email should be scanned by a malware-scanning server before email and its attachments are allowed to enter into the email <span epub:type="pagebreak" id="Page_466" role="doc-pagebreak" aria-label="466"/>server for later pickup by addressees; similar approaches can also scan outbound email and attachments, and in doing so can also be part of a data exfiltration protection system (more on this in <a href="c09.xhtml">Chapter 9</a>). Individual user workstations, PCs, laptops, or smartphones should also have antimalware systems installed, as it's probably most effective (and runtime and throughput efficient) to scan for possible infected downloads, block-listed websites, and so forth at the individual user system level rather than attempt this task centrally.</p>&#13;
</section>&#13;
</section>&#13;
<section aria-labelledby="head-2-147"><span id="c08-sec-0034"/>&#13;
<h2 id="head-2-147">Privacy and Secure Browsing</h2>&#13;
<p id="c08-para-0134">Because the use of Web browsers is such an integral part of the hierarchies of trust that we rely upon for secure e-commerce, e-business, and e-personal use of the Web and the Net, it's important to consider two sides of the same coin: how well do our browsers protect our privacy while they purportedly are keeping us secure? The majority of Web browser software is made freely available to users and systems builders alike; it comes preinstalled by the original equipment manufacturers (OEMs) on many computer products for consumer or enterprise use. The development and support costs of these browsers are paid for by advertising (ads placed within webpages displayed to users), by analytics derived from users' browsing history, or by other demographic data that browser providers, search engines, and websites can gather during their contact with users. Browsers support a variety of add-on functions, many of which can be used by websites to gather information about you and your system, leave session-specific or site-related information on your computer for later use, or otherwise gain more insight about what you're doing while you are browsing than you might think possible or desirable.</p>&#13;
<p id="c08-para-0135">Browsers, like many modern software packages, also gather telemetry data—data that supports analysis of the behavior and functioning of the browser while the user is interacting with it—and makes that telemetry available to its vendor. (Many products say that users opt into this to “improve the user experience,” whether the user feels such improvement or not.) Whether we recognize this or not, this paradigm has transformed the Web surfer from user-as-customer into user-as-product. In some circumstances, that can be of benefit to the user—it certainly provides the revenue stream that developers and infrastructure builders and maintainers need, at no additional direct cost to the user. But it can also be of potential harm to the user, be that user an individual or a business enterprise, if that aggregation of user-entered data, action history, and analytics violates the user's reasonable expectation of privacy, for example.</p>&#13;
<p id="c08-para-0136">Let's start with a closer look at each side of that coin.</p>&#13;
<p id="c08-para-0137"><i>Private browsing</i> is defined as using a Web browser in such a way that the user's identity, browsing history, and user-entered data when interacting with webpages is kept confidential. Browsers such as Mozilla Firefox or Microsoft Edge provide ways for users to open a new window (supported by a separate task and process stream) for private browsing, in which location tracking, identification, cookie handling, and various <span epub:type="pagebreak" id="Page_467" role="doc-pagebreak" aria-label="467"/>add-ons may change the way that they provide information back to websites or leave session-tracking information on the user's computer. For most mainline browsers, telemetry is still gathered and made available to the browser's authors. To put private browsing into perspective, consider one data point: the unique identification of the system you're browsing from. Fully nonrepudiable identification of your system would require every device on the Internet to have a unique key or ID assigned to it that was an amalgam of IP address, hardware identifiers, software identifiers, and even your user ID on that system. A suitable cryptographic hash of all of this data would produce such a unique ID, which could not be de-hashed (decrypted) to get back to your specific username, for example. But if the search engine or webpage keeps a history of activity tagged to that system identification, then every time you browse, your unique history continues to be updated. If that concerns you, can't you just avoid this by opening up a new <i>private</i> browser window, tab, or session? According to tests by the Electronic Frontier Foundation and others, no; so-called “private” browsing still generates an ID of your hardware, software, and session that is unique to one of a billion or more such addresses. And, of course, the browser telemetry is still going back home to its developers. In the meantime, private browsing usually does not prevent ads from being displayed or block pop-up windows from occurring; and some ad blockers and pop-up blockers are incompatible with private browsing modes.</p>&#13;
<p id="c08-para-0138"><i>Secure browsing</i> is defined as using a Web browser in such a way that it actively helps keep the user's system secure, while more assertively or aggressively protecting the user's privacy, data about the user's system, and data about the user's browsing history. Competition between the mainstream browsers as products (that is, as platforms for revenue generation for advertisers or for search engine providers) has driven some of them to incorporate more of these features, and so the line between “highly secure and safe” and “private” browsing continues to blur. Some of the more well-respected secure browsers, such as Waterfox and Pale Moon, are offshoots (or forks) from earlier points in the development of Mozilla Firefox. By eliminating many of the data-intensive add-in capabilities, telemetry gathering, and other features, these secure browsers are also relatively lightweight as compared to native Firefox (that is, they run faster and use fewer system resources to do so).</p>&#13;
<p id="c08-para-0139">If you truly need private and secure browsing, consider using add-ons such as HTTPS-Everywhere, which go a step further by using HTTPS for all of your browsing and then routing it through The Onion Router (TOR). TOR, incidentally, was designed by the U.S. Naval Research Laboratory as a way to provide anonymous communication and Web use for social advocates, journalists, and ordinary people living or working in repressive or totalitarian countries. TOR takes every packet exchange and routes it to different members of its peer-to-peer backbone infrastructure; by the time the connection leaves TOR and goes to the requested URL, the only thing the distant server can see is that last TOR node's IP address. This is very similar to using a VPN to hide your pathway, but with a serious twist: most VPNs bulk encrypt from your entry node to the landing node, providing anonymity and security, but try to minimize dynamic rerouting of your path for improved performance. <span epub:type="pagebreak" id="Page_468" role="doc-pagebreak" aria-label="468"/>TOR, on the other hand, dynamically reroutes to further mask your path and your identity, at the cost of sometimes significantly slower browsing.</p>&#13;
<p>One final approach to secure and private browsing is a sandbox system—a separate computer, outside of your organization's demilitarized zone (DMZ), bastion, or other perimeter network (as described in <a href="c05.xhtml">Chapter 5</a>), that has no organizational or individual identifying data on it. The system is wiped (the disk is hard reformatted and re-imaged from a pristine image copy) after each session of use. Most businesses and many individuals do not have need of such a sandbox approach, but when the occasion warrants it, it works. Strict data hygiene practices must be in force when using such a sandbox; ensure that the bare minimum of information is put in by users as they interact with external systems, and either prevent or thoroughly scan, test, and validate any data or program brought in via the sandbox from outside before introducing it into any other system in your infrastructure. (This is an excellent opportunity to consider the <i>write-down</i> and <i>read-up</i> restrictions in some of the classical access control models, as they apply to systems integrity and data confidentiality protection.)</p>&#13;
<aside>&#13;
<div class="top hr"><hr/></div>&#13;
<section class="feature3">&#13;
<h3><img alt="Note" src="Images/note.png" class="left" width="76" height="53"/> The Downside of a VPN</h3>&#13;
<p id="c08-para-0142">VPNs can do a marvelous job of keeping not only your data but the fact of your connection to a specific webpage totally confidential; it's only on that last hop from the VPN's landing site in the country of your choice to the website of interest that actual IP addresses get used as packets flow to and from. Whether cookies make it back to your system, or whether browser telemetry makes it from your system to the browser's home, may require additional tweaking of the VPN and browser settings.</p>&#13;
<p id="c08-para-0143">If your connection requires some rigorous security verification, however, you may need to turn off the VPN. This is particularly true if the server in question blocks IP addresses originating in certain regions or countries. The author discovered this some time ago as he spent a 10-minute Skype conversation with PayPal security without using a VPN. PayPal security noted that the author's previous login and transaction attempts, moments before, seemed to move around between six different countries on four continents, including Iran and Chechnya, in as few as five minutes. This caused PayPal's security algorithms to block the transaction attempts. Turning off the VPN allowed a “static” IP address (dynamically assigned by the author's ISP) to be used for the next entire session, which was successful. We cannot blame PayPal for being overly protective of the author's bank information in that regard.</p>&#13;
<div class="bottom hr"><hr/></div>&#13;
</section>&#13;
</aside>&#13;
</section>&#13;
<section aria-labelledby="head-2-148"><span id="c08-sec-0035"/>&#13;
<h2 id="head-2-148">“The Sin of Aggregation”</h2>&#13;
<p id="c08-para-0144"><span epub:type="pagebreak" id="Page_469" role="doc-pagebreak" aria-label="469"/>People within military and intelligence communities often encounter situations in which a series of facts at one level of security classification, when taken together and thoughtfully considered, directly or indirectly point to the existence of other facts that are classified at higher levels of security. A particular soldier, for example, may have access to unclassified information about individual military units, such as the quantities of supplies that they are purchasing from commercial vendors. Unclassified training schedules or leave calendars might show that over the next two months, significantly fewer soldiers are taking leave or being sent to training classes. This might reveal plans for an upcoming operational deployment, which no doubt would be information classified at Secret or higher levels. Aggregating information together to see what it reveals about otherwise well-kept secrets has long been a problem for military, government, and commercial organizations alike. This is also an example of a covert path, albeit in this case, the “path” is inside the mind of the human who is aggregating the information.</p>&#13;
<p id="c08-para-0145">When we shift into a commercial setting and introduce mobile devices (BYOD, COPE, or a mix of both), we see the potential for covert paths that aggregate data across different lines of business as well as across the business-personal divide. An independent consultant, acting as a third-party adviser to a number of businesses, faces this problem repeatedly: she cannot allow what she learns in confidence from one client to color, influence, aid, or abet her advice and solutions for another client without violating her professional ethics and maybe her contracts' nondisclosure terms. Even if she studiously avoids this in her own mind, in her mobile device, the potential for aggregation across those “compartments” is real—especially if her mobile device is lost or stolen, and the value of that information is recognized.</p>&#13;
<p id="c08-para-0146">To some degree, data exfiltration and access control methods can help limit this risk; other endpoint security measures can also limit inadvertent disclosure that could lead to aggregation of information. Ultimately, end-user awareness and training play a vital role in preventing such covert pathways in the mind or on the phablet from becoming real risks.</p>&#13;
</section>&#13;
<section aria-labelledby="head-2-149"><span id="c08-sec-0036"/>&#13;
<h2 id="head-2-149">Updating the Threat Model</h2>&#13;
<p id="c08-para-0147">We've surveyed the information infrastructure, putting its various types of vulnerabilities into perspective. Now is the opportunity to take the threat modeling that you and your information security team did during the vulnerabilities assessment phase and update it, reflecting further consideration of vulnerabilities and potential countermeasures. (We normally consider vulnerabilities first, weigh them against our risk management strategy, and <i>then</i> choose and apply countermeasures; it can be useful to have classes of countermeasures in mind as you look for vulnerabilities, if you don't treat the countermeasures as the hammer in your hand and make every problem into the nail you need to whack! Learn from the experience of the countermeasure providers and their user communities—but don't be a slave to their recommendations.)</p>&#13;
<p id="c08-para-0148"><span epub:type="pagebreak" id="Page_470" role="doc-pagebreak" aria-label="470"/>Reexamine your threat model, and see if you've got the threat surfaces (the boundaries between one security zone and the next) in the right place. Verify that you've identified the frontier posts or gateways through which authorized functions must travel, and inspect the rest of what's inside the boundary to make sure no other paths exist that could allow a threat to jump over the boundary. (A maintenance backdoor access point, with a direct-dial modem attached, is an excellent example of what <i>not</i> to leave inside your protected bastions.) Update the documentation of your threat model as part of your updates to the information security baseline.</p>&#13;
<p id="c08-para-0149">Your risk mitigation planning identified and prioritized the risks, and made choices about which risks to accept as-is; which to transfer; which to bound, contain, or limit the effects of; and which to correct or mitigate. It's these last two sets—the risks to contain and the risks to correct—that you'll need to apply countermeasures to as part of your efforts to reduce or eliminate your exposure to loss.</p>&#13;
</section>&#13;
<section aria-labelledby="head-2-150"><span id="c08-sec-0037"/>&#13;
<h2 id="head-2-150">Managing Your Systems' Security</h2>&#13;
<p id="c08-para-0150">Earlier chapters have stressed the principle that a well-managed system is one that can be kept more secure, more easily and at a lower total cost of ownership, than an unmanaged one. They've also stressed that the professional, ethical, and legal burdens of due care and due diligence require prudent, thoughtful attention to detail, and to the <i>management</i> of those details. This leads inexorably to risk assessments, security baselines, system and information asset inventories, and vulnerability assessment and management.</p>&#13;
<p id="c08-para-0151">Each of these steps, as we've seen, is a set of workflows in its own right; taken together, they are the year-in, monthly, weekly, and even minute-by-minute task and activity plans for the on-the-job security professional. These workflows can, in many cases, unite administrative and decision-making processes, such as configuration management, with the task-by-task delivery (and post-task assessment) of security services.</p>&#13;
<p>In our earlier studies of risk management and risk mitigation, we looked at the use of security-related information management systems, and their dashboards and displays, as ways of addressing key stakeholder decision needs. Some of these systems focus on event-related information; others take a broader look at the entire security process. Typical dashboards provide at-a-glance insight into several aspects of a critical information infrastructure's security situation:</p>&#13;
<ul class="square" id="c08-list-0013">&#13;
<li id="c08-li-0080">Real-time and near-real-time incident information</li>&#13;
<li id="c08-li-0081">Real-time and near-real-time indicators and warnings (flags or conditions that <i>might</i> signal an incident of interest in the offing)</li>&#13;
<li id="c08-li-0082">Current status of ongoing risk mitigation projects and activities</li>&#13;
<li id="c08-li-0083">Systems health information, whether for critical nodes in the information architecture, or across the user base of systems</li>&#13;
<li id="c08-li-0084">Current status of “Top Ten” vulnerabilities and ongoing remediations</li>&#13;
</ul>&#13;
<p id="c08-para-0153"><span epub:type="pagebreak" id="Page_471" role="doc-pagebreak" aria-label="471"/>The point is not that every organization needs a security information management systems product and its color-glossy dashboards with which to manage its systems security. Nonetheless, all organizations, from the smallest of SOHO operations on up, need to treat security as a set of processes that are <i>managed</i> and <i>led</i>. Both of those key tasks require the right information, organized and presented in timely, accurate, and trustworthy ways. In other words, to achieve CIANA+PS, you as the SSCP-in-charge need CIANA+PS support of the information <i>you</i> need to do your job!</p>&#13;
</section>&#13;
<section aria-labelledby="head-2-151"><span id="c08-sec-0038"/>&#13;
<h2 id="head-2-151">Summary</h2>&#13;
<p id="c08-para-0154">There's an absolutely daunting range of threats that attackers can use to find, fix, and exploit vulnerabilities in your systems in ways that disrupt your operations. That “kill chain” kind of focus—that first you locate a possible target; then you determine how to keep it in a known, fixed location (so you can find it again when you need to); and then you attack—is how the threat actors and the black hat hackers think about <i>your</i> IT infrastructure. You need to outthink them; you need to think ahead of their OODA (observe–orient–decide–act) loop if you're going to keep your infrastructure safe, secure, and resilient. And defending that infrastructure has to happen from the ground up, so to speak. Infrastructures run on hardware—on physical systems of some kind.</p>&#13;
<p id="c08-para-0155">The same systems approach that organizations use in specifying, designing, and building those infrastructures supported us when we did the vulnerabilities assessments of the as-built information systems baseline. We've seen in previous chapters how risks apply to the information and the business processes that use it, and we've come through the networks layers that virtually all IT infrastructures rely on. By focusing here on the CPU and chip-level hardware, and then back up through the layers of firmware and systems software, we've identified vulnerabilities and possible countermeasures to reduce, contain, or eliminate risks associated with them. We also used the notional design of a typical on-premises datacenter as a way to focus our thinking about security (and vulnerability) at the device, subsystems, networks, and systems levels.</p>&#13;
<p id="c08-para-0156">One thing we saw throughout is that in order to deliver trust and confidence to our users and our organization's stakeholders, we have to demand and expect trustworthy support from all aspects of our IT supply chain. The fastest-moving piece of that supply chain is the software update process for applications and operating systems, which seems to deliver updates almost every night. We, as SSCPs, need to support the IT department or team in managing those updates, as well as updates to device-level firmware. And as President Ronald Reagan said, when talking about the Strategic Arms Limitation Talks with the Soviet Union, we do need to trust our partners—but we equally need to <i>verify</i> that their actions live up to that trust.</p>&#13;
<p id="c08-para-0157">From the systems baseline and the business impact analysis on to the fine-grained details in our configuration management and control systems, there's a <i>lot</i> of information <i>about</i> information systems and their security needs. That information is the foundation we stand <span epub:type="pagebreak" id="Page_472" role="doc-pagebreak" aria-label="472"/>on as we choose countermeasures to mitigate risks with. We will build upon this infrastructure of ideas about securing our information infrastructures as we move into cloud-hosted environments, applications security, and data security in <a href="c09.xhtml">Chapter 9</a>.</p>&#13;
</section>&#13;
<section aria-labelledby="head-2-152"><span id="c08-sec-0039"/>&#13;
<h2 id="head-2-152">Exam Essentials</h2>&#13;
<ul class="none" id="c08-list-0014">&#13;
<li id="c08-li-0085"><b>Explain the relationship between the information systems baseline, the vulnerability assessment, and adequate hardware and systems security.</b>  The information systems baseline documents all elements of the information system, including identification of versions, patch and update levels, critical subsystems or programs, and location. This forms part of the configuration-controlled and managed baseline of the information system. It should drive vulnerability assessment, including physical and logical inspection of systems elements and components. By including vulnerability assessment and risk mitigation planning, it becomes the information systems security baseline, documenting the as-is, in-use set of both the protected systems elements and known but still unresolved vulnerabilities.&#13;
<p id="c08-para-0160" class="listPara1"><b>Describe the different types of malware or malicious code and possible effects related to its presence and execution.</b>  Malware is any type of software designed and used for a variety of malicious purposes, which can include installing unwanted software, reading files, copying and exfiltrating files, damaging data, software, or hardware, or logging system usage information. Malware can also misguide users into taking actions through fear or misdirection that cause even further damage to the target system. Malware can cause degraded system performance, and can also turn your system into a platform from which it launches attacks upon other unsuspecting systems. Some of the key types have been classified as viruses, Trojan horses, worms, scareware, ransomware, keyloggers, sniffers, and botnets. Rootkits are a particularly pernicious type which overwrite part of the operating system's bootstrap loader functions, and thus can be difficult to find and remove. Note, though, that as attacker's purposes and tactics evolve, so too do their malware and the payloads they carry.</p>&#13;
<p id="c08-para-0161" class="listPara1"><b>Know how to detect the presence of malware, either when installed and dormant or while it is executing on your systems.</b>  Malware, when present on a system, can be detected during or after its installation, by active scanning (typically via antimalware software systems). It can also be detected by systems configuration audits that compare directory structures and files against known, validated baseline copies; this typically relies on file- or directory-level hashes as signatures. Malware installations can also be surmised by close inspection or analysis of system activity and event logs. Malware that is actively running on a system may be detected by inspection of installed and running services or programs, or by large-scale behavioral changes in the system—runtimes of known tasks may change; tasks may be slow to load; data files may be missing, visibly altered, or corrupted. Changes in network traffic, particularly file uploads, may suggest that malware is attempting to <span epub:type="pagebreak" id="Page_473" role="doc-pagebreak" aria-label="473"/>exfiltrate data. Sandboxes can also be used, as quarantine areas or copies of the system in which any new software or suspected data files are loaded and closely examined.</p>&#13;
<p id="c08-para-0162" class="listPara1"><b>Explain the role of the systems' end users in malware prevention, containment, and removal.</b>  The first is user awareness, training, and engagement with your information security plans and procedures. Alert users can quickly spot when something is not quite right and should be suspicious enough to ask for help from IT security without fear of embarrassment. Users must also believe in, support, and follow all policies, such as acceptable use, safe browsing, and email attachment use. Users are also the first line of defense against social engineering attacks or reconnaissance probes, and the end user's level of training, awareness, and proficiency in the daily normal of business logic and business processes is the best protection against phishing, spear phishing, and whaling attacks. Once a malware infestation is observed, end users should cooperate with IT security staff as they attempt to identify all possible vectors by which the malware may have entered the systems or spread within it, but they should not attempt to remove it themselves.</p>&#13;
<p id="c08-para-0163" class="listPara1"><b>Explain the various types of malware countermeasures and briefly describe their use.</b>  Trained, motivated, and aware users are the first line of defense. Malware scanners, antivirus, or similar systems can also use a variety of heuristic approaches to recognize a potential malware package before it enters the system's secure boundaries. Port scanning, blocking, and other tools can limit users or processes from connecting to potentially harmful IP addresses or websites (sites known or suspected to harbor malware, hackers, or other threat actors), using lists of banned or blocked sites, ports, services, or addresses, or lists of those that are acceptable and thereby banning all others). Requiring that all software be digitally signed by its creators or publishers, and that signature be supported by a trustworthy, valid certificate, can help reduce the threat of malware being installed on the system. Keeping all software (systems and applications) up to date with all vendor-provided security updates and patches is also an important countermeasure.</p>&#13;
<p id="c08-para-0165" class="listPara1"><b>Identify the primary types of malicious activities that an organization's information systems may face, and some of the countermeasures that might apply.</b>  Hostile or malicious insider activity is the first and perhaps most difficult to deal with. Many different motivations may lead an employee to choose to attack the organization by means of attacking its information and information systems. The best IT security countermeasures involve control of elevation or aggregation of privileges, separation of duties, and auditing of systems access and usage. Theft of private, proprietary, or sensitive data, by insiders or external attackers, can expose the company to legal action, loss of customers, or loss of revenue, or in some cases lead to injury or death of employees or others. Access control is the first defense; control of removable media (entry onto the premises, use with an organization's systems) are also important countermeasures. Mobile device management, particularly in “bring your own” environments, makes data theft harder to prevent. There are some data exfiltration detection systems that may suit some organizations and their systems as well. For Web-facing businesses, or for businesses dependent on Internet connectivity to other sites, large-scale denial-of-service (DoS) attacks can impact network communications <span epub:type="pagebreak" id="Page_474" role="doc-pagebreak" aria-label="474"/>systems; distributed denial-of-service (DDoS) attacks are ones conducted using hundreds or thousands of geographically separated computers to launch the attack. Adaptive firewall protection that can smartly detect a possible DDoS in progress, block it, and prevent itself from being flooded is a key countermeasure for a DDoS.</p>&#13;
<p id="c08-para-0166" class="listPara1"><b>Know what an endpoint device is, and explain the security challenges involved with endpoints.</b>  Endpoints are typically the devices at the end of networks or communications paths, at which the data from central systems is captured, created, displayed, or output to elements that are not part of the IT system itself. These can be people, computer-controlled manufacturing devices, robotic devices, or almost any IoT device. First, start with your information systems baseline, which should identify specific devices, their locations, users, and the systems and processes they are parts of. Endpoints can be people-facing terminals, personal computer workstations as thick clients or thin clients, phones, phablets, even smart watches and wearable computing devices; point-of-sale devices or other specialized information hardware may also be user-facing endpoints. The IoT can be serving computer-driven manufacturing, robotic warehouses, or other process control environments, in which every data-using, communications-capable device that translates data into the real world and back again is an endpoint. Smart products themselves—ones that can communicate usage and maintenance data into your systems—are also endpoints. Each of these devices involves data at rest (in the device), in use (interacting with humans or other machines or systems), and in motion (into and out of your overall systems). These devices can be stolen, their contents cloned, or their onboard software hacked. Many IoT devices have very little design provision for securing the onboard software and data. In most systems, endpoint devices can be easily and quickly connected to your networks via Wi-Fi, LiFi, or other remote access capabilities. Endpoint devices can be highly mobile, leading to a fast-moving, dynamic system of systems, which is difficult to monitor and control. Finally, one consideration is who owns, operates, and maintains the endpoints. Company-owned devices may be totally managed by the company, have shared management with the endpoint user employee, or be fully enabled for end-user management and control. BYOD and BYOI take these challenges further into how effectively software-enforced configuration management and control can help enforce acceptable use, identity authentication, access control, usage and location accountability, data commingling, and other risk mitigation policies.</p>&#13;
<p id="c08-para-0167" class="listPara1"><b>Explain what mobile device management (MDM) can do, and what some of its limitations are.</b>  Mobile device management (MDM) systems attempt to provide integrated sets of tools for identifying, tracking, and controlling the use of mobile devices as part of an organization's IT systems, as well as manage their software and data configuration. MDM systems primarily support organizational use of laptops, tablets, smartphones, and similar hybrid devices. As the line between the IoT and mobile personal computing continues to blur, MDM vendors are looking to support more kinds of devices. Some MDM systems can support mobile point-of-sale, inventory, process control, or other shop floor or clinical instrumentation as well. Most MDM systems claim to be able to facilitate a mix of company-owned and -managed, company-owned personally enabled (COPE), and bring-your-own device (BYOD). Organizations need to first realize that MDM systems cannot fill policy gaps. Each new device must be introduced to the MDM <span epub:type="pagebreak" id="Page_475" role="doc-pagebreak" aria-label="475"/>system, with supporting data as to user identification, authorized usage, or other policy-based security and control information. MDMs should be able to support device loss protections, either locking the device once it's declared missing or randomizing or otherwise destroying (not just deleting) content stored on the device. MDM systems cannot by themselves deal with aggregation of privilege or aggregation of information by the device end users. Protections for data in the device (at rest, in motion, or in use) are also highly dependent on the device and its capabilities and may not be easily manageable by the chosen MDM system.</p>&#13;
<p id="c08-para-0168" class="listPara1"><b>Explain the role of intrusion detection systems and technologies in keeping hardware and systems secure.</b>  Intrusion detection systems (IDSs) use a variety of software technologies to detect attempted intrusions by an unauthorized user or process into a secure (bastion) portion of the organization's systems. A variety of patterns, heuristic rules, or signatures are used by the IDS to flag suspicious traffic to supervisors for further analysis. Some IDSs can also be configured to directly issue alarms and take containment actions, in which case they are known as intrusion prevention systems (IPSs). An IDS can be host-based (HIDS) or network-based (NIDS). Host-based systems are installed on one machine (the host), and they monitor for attempts to attack protected system resources or files. Protecting the operating system's boot image, bootstrap loader, kernel, and other files is a primary responsibility of most HIDSs. Vendor-supplied applications and their files, and even user- or organization-generated apps, as well as data files, can be part of an HIDS's span of monitoring and protection. NIDSs are hosted on a specific device placed at the perimeter of a protected subnet, and look at network traffic for possible intrusion attempts. NIDSs can be configured to look at some or all network traffic (connection-based and connectionless, control and data). Both HIDSs and NIDSs typically operate either by signature recognition (matching a pattern of events to predefined signature patterns of known attacks) or by anomaly detection (using machine learning approaches to observe the differences between normal and anomalous activities).</p>&#13;
<p id="c08-para-0169" class="listPara1"><b>Know what a trusted platform module (TPM) is and its role in protecting information systems.</b>  A trusted platform module (TPM) is a special hardware component, usually packaged in a single electronic chip, that uses on-chip hashing, encryption, and specialized software to store encryption keys, digital signatures, and other data. The TPM does not control how the host system it is a part of uses the TPM or the data kept within the TPM, but it does add an extra layer of tamper-resistant protection to these processes. TPMs are being included in many laptops, smartphones, and other devices. TPMs can be integrated into a wide variety of OS environments. The Trusted Computing Group (TCG) is the international de facto standards body that specifies TPM design and performance. With over 120 hardware and software companies as members, TCG is driving toward globally useful solutions for increased security. TPMs are well suited to scenarios that demand an exceptionally high degree of trust and confidence for user and service provider authentication, and for protection of data in use, in motion, and at rest.</p>&#13;
<p id="c08-para-0170" class="listPara1"><b>Explain the different kinds of firewalls and their use in protecting an organization's information infrastructure.</b>  Firewalls are systems that actively prevent some kinds of network traffic from crossing over a boundary. Firewalls typically work by signature recognition, <span epub:type="pagebreak" id="Page_476" role="doc-pagebreak" aria-label="476"/>anomaly detection, filtering rule sets, or any combination of these. Hardware-based firewalls (still with extensive firmware components) may be found in switches, routers, or standalone firewall systems products. They may also be part of modems or other Internet point of presence interface equipment. Software-based or host firewalls are programs that run on a specific computer, whether that be a server, a cluster management system, or an endpoint device. Hardware-based firewalls are placed on the perimeter of a protected subnet; ideally, there should be no entry points (perimeter crossings) into the protected subnet that are not protected by a hardware firewall of some kind. Many desktop, personal computing, and server operating systems now have firewall systems as a part of their distribution kits. In addition, many antimalware systems may provide firewall capabilities. Both kinds of firewalls can use either stateless or stateful detection techniques (that is, they look at traffic right in the moment, or at a history of traffic related to a port, a connection, and so forth).</p>&#13;
<p id="c08-para-0171" class="listPara1"><b>Compare and contrast firewalls with other malware countermeasures.</b>  Firewalls work to filter, block, or prevent network traffic that is unauthorized; this requires inspection of TCP/IP packets attempting to cross the boundary via the firewall, whether as a network-based or a host-based firewall. Other malware countermeasures are working in concert with the host computer's operating system to detect attempts to circumvent access controls, to use or attempt to change protected files, to thwart logon restrictions, or to elevate the privilege of a process.</p>&#13;
<p id="c08-para-0172" class="listPara1"><b>Explain the merits of using endpoint encryption as part of an information systems security approach.</b>  A variety of secure protocols should be considered and used to secure data in motion to and from the endpoint, in use within or at the endpoint, and at rest within the endpoint device. The organization's CIANA+PS needs with respect to the endpoint and its use within the systems should dictate which protocols should be required or optional when the endpoint is a part of the organization's systems or processing, storing or displaying the organization's data. This may require encryption capabilities within browsers, email systems, or network services, at the endpoint device itself, to support secure browsing, digital signatures, secure virtual private network connections, or stronger identity authentication and access control. As most of these hierarchy of trust capabilities are now a part of consumer-grade endpoints, it is prudent to make their use a required part of the use of the endpoint with the system. For example, it's almost inexcusable to have endpoints using wireless connections in which packets are not protected via encryption.</p>&#13;
<p id="c08-para-0173" class="listPara1"><b>Compare and contrast a sandbox and a honeypot in terms of their roles in systems security.</b>  A sandbox is an isolated, highly controlled software and hardware environment in which software and data can be tested, inspected, and evaluated. Sandboxes are frequently used as part of software systems development and testing so that new versions of production software can be evaluated, instrumented, and assessed without their execution (proper or improper) causing changes to production data, environments, and business activities. Sandboxes are also useful as quarantine areas in which software or data suspected of carrying malware can be safely examined (with or without executing it). A honeypot is a <span epub:type="pagebreak" id="Page_477" role="doc-pagebreak" aria-label="477"/>sacrificial system placed on the outward-facing areas of the organization's network. It may use copies of production systems (such as webpages and Web-facing databases), new versions of such systems, or cut-down, limited-capability versions of production environments. The purpose of a honeypot is to allow an attacker limited, controlled access to the organization's systems so that more can be learned about systems vulnerabilities by watching the attacker attempt to exploit vulnerabilities in those systems.</p>&#13;
<p id="c08-para-0174" class="listPara1"><b>Explain what secure browsing is and how organizations should determine whether to use it as part of their systems.</b>  The most popular Web browsers are provided free to users (commercial or personal users); in doing so, their developers gain revenues by transforming their users into products—the browser delivers user browsing history to advertisers or other third parties who can derive value from analysis of browsing behavior and history. This exposes most users' systems (which host these browsers) to adware, spyware, and potential loss of user control over whom this information is shared with by the browser, by search engines the user accesses, and so forth. Although some adware and tracking apps are not malware, many malware packages can masquerade as <i>purportedly</i> safe adware and spyware. The major browsers attempt to address user concerns about security and privacy by providing private windows in which many advertising, tracking, login, and telemetry features are disabled or their use is restricted. If these do not meet your organization's needs, other, more secure browsers are available. Ultimately, a standalone sandbox system, typically positioned beyond the organization's DMZ and with no links back into secure (bastion) systems or data, may be used. Such a “throwaway” system can be used for browsing, uploading, and downloading, and then completely wiped (zeroized) and restored to a known, trusted state, if this is necessary to achieve the organization's security needs.</p>&#13;
<p id="c08-para-0175" class="listPara1"><b>Explain the importance of a trusted supply chain to IT security and how it can be achieved.</b>  Every system, subsystem, board-level part, or element of your organization's IT systems is designed and built by some other business, quite often one on the other side of the world. Most of those subsystem elements have board-level or device-level firmware in them; all of them depend on operating system software suites to integrate them, coordinate their actions, and turn those actions into services that end-user applications need. Every element of those systems is potentially a vulnerability you have brought inside your organization; by making those elements part of your information infrastructure, you rely on their continued safe, secure, and resilient operation to meet your objectives. Updates to software, firmware, and hardware add features, address known design or production errors, and may also introduce new vulnerabilities into your systems. As a customer of your suppliers, you cannot run their business for them—you cannot validate that all of their production processes are secure enough to meet your organization's CIANA+PS needs. So you have to trust them to do their job right. This trust is supported by transparent and open sharing of information, by both sides, and often facilitated by creating strategic relationships or partnerships with key members of your supply chain.</p></li>&#13;
</ul>&#13;
</section>&#13;
<section aria-labelledby="head-2-153"><span id="c08-sec-0040"/>&#13;
<h2 id="head-2-153">Review Questions</h2>&#13;
<section><span id="c08-exsec-0001"/>&#13;
<ol class="decimal">&#13;
<li id="c08-ex-0001"><span epub:type="pagebreak" id="Page_478" role="doc-pagebreak" aria-label="478"/>When choosing your countermeasures and tactics to protect hardware and systems software, you should start with which of the following?&#13;
<ol class="upper-alpha">&#13;
<li>Published Current Vulnerabilities and Exposures (CVE) databases</li>&#13;
<li>The information systems baseline that documents the systems your organization uses</li>&#13;
<li>Your organization's business impact analysis</li>&#13;
<li>Your organization's IT vulnerabilities assessment</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0002">Does the SSCP have a role in IT supply chain security issues? (Select the most correct statement.)&#13;
<ol class="upper-alpha">&#13;
<li>No, because this really is for the logistics, purchasing, or IT departments to focus on.</li>&#13;
<li>No, because if supply chain security is a concern to the company, it needs to be addressed by senior directors via a strategic partnership or relationship with key vendors or suppliers.</li>&#13;
<li>Yes, because the SSCP can and should advise on all potential security considerations affecting purchase, installation, use, maintenance, and disposal of IT equipment and systems.</li>&#13;
<li>Yes, because most of the supply chain risks to IT stem from purchasing or leasing systems at lowest cost, typically from discounters who offer little product support.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0003">What kind of malware attacks can corrupt or infect device-level firmware? (Choose all that apply.)&#13;
<ol class="upper-alpha">&#13;
<li>SNMP-based attacks that can trigger the device to download and install a firmware update remotely</li>&#13;
<li>Remote or onsite device management (or mismanagement) attacks that allow a hacker to initiate a firmware update using a hacked firmware file</li>&#13;
<li>Phishing or misdirection attacks that fool operators or users into initiating an upload of a hacked firmware file</li>&#13;
<li>None, because firmware updates require operator intervention to download trusted updates and patch files from the manufacturer's or vendor's websites, and then initiate and monitor the update and restart of the device</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0004">What is a zero day exploit?&#13;
<ol class="upper-alpha">&#13;
<li>An exploit conducted against a vulnerability within the same day as it is reported</li>&#13;
<li>An exploit that impacts a system immediately, rather than having a delayed effect like ransomware or scareware</li>&#13;
<li>There are no real zero day exploits, but the mass media has exaggerated the dangers of unreported vulnerabilities</li>&#13;
<li>An exploit conducted against a newly discovered vulnerability before it becomes known to the cybersecurity community or the system's vendor or owners</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0005"><span epub:type="pagebreak" id="Page_479" role="doc-pagebreak" aria-label="479"/>The most important security vulnerability to your IT infrastructure's hardware elements would be which of the following?&#13;
<ol class="upper-alpha">&#13;
<li>Being “orphaned” when the manufacturer no longer provides technical support, spare parts, or firmware updates</li>&#13;
<li>Electrical power fluctuations, air conditioning issues, or other workplace environmental issues</li>&#13;
<li>Unauthorized devices or software installed during maintenance by an off-site maintenance vendor or computer store</li>&#13;
<li>Theft, or being misplaced or lost</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0006">Trusted platform modules provide which of the following benefits to an organization's IT infrastructure?&#13;
<ol class="upper-alpha">&#13;
<li>By means of hardware implementations of encryption, hashing and key generation, they greatly simplify the use of certificate authorities and PKI.</li>&#13;
<li>As a trust root, a TPM can make hierarchies of trust more reliable.</li>&#13;
<li>The TPM replaces the host system's random number generators and hash routines with its hardware-accelerated, more secure versions. This enhances system security as well as runtime performance.</li>&#13;
<li>As a signed part of operating systems kernels, TPMs make it possible to validate software updates more reliably.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0007">Malware is best classified and understood by which of the following?&#13;
<ol class="upper-alpha">&#13;
<li>The ways that it spreads from one system to another</li>&#13;
<li>The capabilities it grants the exploiter, and the impacts it has on the target system</li>&#13;
<li>Which of many strains of code, originally developed by national governments, it is descended from or modeled after</li>&#13;
<li>Which operating systems, applications, or network systems it targets</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0008">How is malware detected when it has infected a target system? (Choose all that apply.)&#13;
<ol class="upper-alpha">&#13;
<li>Users notice abnormal behavior of their systems, ranging from sluggish response, to strange crashes, to unusual warning messages or pop-ups.</li>&#13;
<li>User files disappear, are corrupted, or become unusable, and then inexplicably they come back.</li>&#13;
<li>It's very difficult to detect without examining the executable code of systems kernel files.</li>&#13;
<li>Malware scanner programs look for signatures in program files that match known malware, or look for patterns of behavior that are suspicious.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0009"><span epub:type="pagebreak" id="Page_480" role="doc-pagebreak" aria-label="480"/>Do firewalls play a role in countering or preventing a malware infestation from striking a system?&#13;
<ol class="upper-alpha">&#13;
<li>Yes, because firewalls can be programmed to allow only known and approved files to be received by the systems on their network, thus implementing software allowed / blocked list management as a form of protection.</li>&#13;
<li>Yes, because firewalls can use sandboxes or quarantine areas to analyze suspected files to see if they match known malware signatures or show anomalous behavior that indicates the presence of malware.</li>&#13;
<li>Yes, because firewalls can restrict or filter connections by outside devices to the network, and block connections to ports or the use of protocols or services that may be attempts to infiltrate your systems and possibly bring malware with them.</li>&#13;
<li>No, because firewalls look only at network traffic and network protocols, and do not inspect the contents of files that might contain malware.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0010">Which statement about host-based firewalls is correct?&#13;
<ol class="upper-alpha">&#13;
<li>Host-based firewalls can be set to prevent applications programs from other systems from connecting to resources on the host computer, including preventing those applications from loading and executing on the host.</li>&#13;
<li>Host-based firewalls can filter, restrict, or block connection attempts by programs running on the host computer to external networks.</li>&#13;
<li>Host-based firewalls are very similar to antimalware systems in that they scan files or packets coming into and out of the host system for possible malware.</li>&#13;
<li>Network-based firewalls offer greater protection against malware intrusions than host-based firewalls can.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0011">What information do you need to manage your IT infrastructure security activities? (Choose all that apply.)&#13;
<ol class="upper-alpha">&#13;
<li>Incident characterization and warning data, in real time</li>&#13;
<li>Status of planned systems upgrades and performance improvements</li>&#13;
<li>Traffic, systems utilization, and systems health and status information, updated in near real time</li>&#13;
<li>Status of open vulnerabilities, planned resolution efforts, and affected systems</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0012">Is secure browsing the same as private browsing? Why or why not? (Choose all that apply.)&#13;
<ol class="upper-alpha">&#13;
<li>They are different in that private browsing may not effectively mask your identity or the identity of your system but secure browsing can.</li>&#13;
<li>They started out being different but are rapidly converging to offer the same set of privacy and system protection features.</li>&#13;
<li>The only truly secure and private browsing is what you do on a sterile, sandbox system, with no PII or company data made available to the browser or sites you browse, and no files transferred from the sterile sandbox system into your protected systems.</li>&#13;
<li>No matter how secure your browser, it's your use of search engines that compromises your privacy.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0013"><span epub:type="pagebreak" id="Page_481" role="doc-pagebreak" aria-label="481"/>Malware can be introduced into your protected systems by all of these methods except:&#13;
<ol class="upper-alpha">&#13;
<li>Using removable media such as thumb drives</li>&#13;
<li>Connecting to a webpage containing malware embedded in its pages</li>&#13;
<li>Opening data files on a webpage via your Web browser</li>&#13;
<li>Watching a streaming video or listening to streaming music or audio files</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0014">What are the limitations of mobile device management (MDM) when it comes to security needs? (Choose all that apply.)&#13;
<ol class="upper-alpha">&#13;
<li>MDM systems can handle company-owned devices well, but most cannot support the wide range of user preferences that bring-your-own situations can involve.</li>&#13;
<li>Most MDM systems can handle only market-leading mobile phones and laptops and cannot support wearable computing, smart watches, and so forth.</li>&#13;
<li>MDM systems, by themselves, cannot make up for shortcomings in organizational policies or plans for risk management.</li>&#13;
<li>MDM systems usually do not provide visibility or management control over mobile device software updates.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0015">Can encryption solve all of your endpoint security problems?&#13;
<ol class="upper-alpha">&#13;
<li>No; by itself, this does not offer protection if the device is lost or stolen.</li>&#13;
<li>No; many endpoints may still allow users to create covert paths that move information across security boundaries or aggregate information in ways they should not.</li>&#13;
<li>Yes, provided the endpoint device has a TPM in it to implement PKI in reliable ways.</li>&#13;
<li>Yes, if encryption fully protects both endpoint communications and data storage and use.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0016">How does bring your own infrastructure (BYOI) affect information security planning? (Choose all that apply.)&#13;
<ol class="upper-alpha">&#13;
<li>Since it's just a special case of bringing your own devices, it adds very little in the way of new concerns or issues.</li>&#13;
<li>By including mobile hotspots, cloud services, and other elements in the mobile device category, BYOI actually makes the security planner's job easier by transferring these concerns to the mobile system's users.</li>&#13;
<li>BYOI potentially opens the organization's infrastructure up to previously unknown connections with other people, organizations, and so forth; the potential for new and surprising risks is very great.</li>&#13;
<li>BYOI often uses consumer-grade services, particularly for cloud services, which are not compatible with typical enterprise systems.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0017"><span epub:type="pagebreak" id="Page_482" role="doc-pagebreak" aria-label="482"/>What do you have to do differently to protect virtual machines, as compared to protecting your physical hardware systems?&#13;
<ol class="upper-alpha">&#13;
<li>Nothing; you'll still need to do everything you do to protect the operating systems, applications, data, and networks that your real machines use, for your virtual machines.</li>&#13;
<li>Since virtual machines are more easily sandboxed, you can run on them unprotected, and not have the performance penalties associated with malware scanning or firewalls.</li>&#13;
<li>Because it's so easy to create (and destroy) VMs, you may need policy and procedural controls over who can do this and what protections need to be in place.</li>&#13;
<li>Because it's so easy to create (and destroy) VMs, you don't really need to worry about them. The protections in place on the rest of your systems will keep them isolated.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0018">Of the many things you could do to improve endpoint security, which would you recommend as most effective?&#13;
<ol class="upper-alpha">&#13;
<li>Ensure that users promptly report missing, lost, or stolen endpoint hardware devices.</li>&#13;
<li>Ensure that each endpoint has multiple, secure means to connect to your systems to enhance availability and productivity.</li>&#13;
<li>Ensure that identity management and access control systems will not allow unauthorized users or processes access to system resources, regardless of what device they are from.</li>&#13;
<li>Provide fully encrypted links for all data flows to and from endpoint devices.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0019">Which of the following statements about malware are not true? (Choose all that apply.)&#13;
<ol class="upper-alpha">&#13;
<li>Malware may corrupt your data and software, but it cannot damage your hardware.</li>&#13;
<li>Most SOHO environments have very little to lose to a malware infection, so they are justified in not spending a lot of effort or money on defensive systems.</li>&#13;
<li>If you operate your system within a hierarchy of trust, and you do not go beyond its boundaries, you do not need to do anything else to protect against malware.</li>&#13;
<li>Doing all of your browsing in fully secure (HTTPS) sessions will prevent any malware from entering your system.</li>&#13;
<li>None of these statements are true.</li>&#13;
</ol>&#13;
</li>&#13;
<li id="c08-ex-0020">Which of the following statements about email and malware are correct? (Choose all that apply.)&#13;
<ol class="upper-alpha">&#13;
<li>For most enterprise systems, a separate server that scans all incoming email and attachments, before email is sent to its addressees, should be used.</li>&#13;
<li>As long as all of your email is digitally signed, such as with S/MIME, even the attachments will be free from malware.</li>&#13;
<li>Limiting the total size of an incoming email and all of its attachments is a practical way to prevent malware coming into your systems.</li>&#13;
<li>Email scanning for malware may be 100% effective at stopping malware from entering your systems directly, but it will not help with phishing, whaling, or other such attack vectors.</li>&#13;
</ol>&#13;
</li>&#13;
</ol>&#13;
</section>&#13;
</section>&#13;
</section>&#13;
</div></body>
</html>